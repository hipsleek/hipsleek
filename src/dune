(library
  (public_name hipsleek)
  (libraries hipsleek.common hipsleek.cil extlib batteries ocamlgraph camlp4 camlp4.lib xml-light)
  (wrapped false)
  (preprocessor_deps ../xdebug.cppo) (preprocess (per_module
    ((action (run camlp4of %{input-file})) parse_cmd parse_fix parse_fixbag parse_shape)
    ((action (run cppo -I . -D TRACE %{input-file})) typeclass monads spass prove cfsolver dda rtc share_prover_w2 frame typechecker gProcList cvc4 icontext rev_ast synUtils da stat_global gui rank ti3 bind_inference piecewise minisat old_sa2 scriptarguments isabelle checkeq nativefront ghip syn_checkeq globalvars drawing maingui net lemutil iincr fact dp derive checks share_prover norm cpgraph gLogViewWindow term mona imminfer layout ti acc_fold cvc3 cilparser icmd solver mathematica solver_dp saout intsparser terminf slsat csvutil fixbag test cleanUp pi specutil sa3 cfout lemsyn tlutils redlog musterr saerror old_sa java lemma paralib1 vperm immutable auxnorm astsimp z3 cpure_pred gEntailmentList gsleek env error cprog_sleek tpdispatcher fixUtil fixpoint libSleek slk2smt infinity pointers inliner log expure soutil gSourceViewX shares_z3_lib gUtil syn cfutil iastUtil test_cilparser ti2 oast sacore sleekengine cvclite cputil coqinf fixcalc inferHP cfimmutils sap share_prover_w prooftracer coq cjava label_aggr lp hsprinter predicate sleekUtils trans_arr mem lemproving classic termUtils paralib1v2 context monadicinterp predcomp xmlfront hgraph sautil typeinfer sleekcore template setmona cf_ext lem_store smtsolver rtc_algorithm infer cvutil))))

(ocamllex
 (modules jlexer ilexer))
; exclexer

(ocamlyacc
 (modules jparser iparser))

; run-oc new-mona test-oo

(data_only_dirs other)

(env
 (dev
  (flags
   (:standard -warn-error -A))))
