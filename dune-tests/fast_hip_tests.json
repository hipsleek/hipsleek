{
  "hip_vperm": [
  {"name": "vperm/alt_threading.ss", "flags": "--ann-vp", "checks": [
    {"name" : "increment", "result" : "SUCCESS"}, {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "vperm/fibonacci.ss", "flags": "--ann-vp -tp z3 -perm none --dis-ls dis--locklevel", "checks": [
    {"name" : "seq_fib", "result" : "SUCCESS"}, {"name" : "para_fib2", "result" : "SUCCESS"}
  ]},
  {"name": "vperm/global-var-norace.ss", "flags": "--ann-vp --dis-pgbv", "checks": [
    {"name" : "inc", "result" : "SUCCESS"}, {"name" : "func", "result" : "SUCCESS"}
  ]},
  {"name": "vperm/global-var-race.ss", "flags": "--ann-vp --dis-pgbv", "checks": [
    {"name" : "inc", "result" : "SUCCESS"}, {"name" : "func", "result" : "FAIL"}
  ]},
  {"name": "vperm/mergesort.ss", "flags": "--ann-vp", "checks": [
    {"name" : "count", "result" : "SUCCESS"}, {"name" : "split_func", "result" : "SUCCESS"}, {"name" : "merge", "result" : "SUCCESS"}, {"name" : "insert", "result" : "SUCCESS"}, {"name" : "parallel_merge_sort2", "result" : "SUCCESS"}
  ]},
  {"name": "vperm/passive_stack_race.ss", "flags": "--ann-vp", "checks": [
    {"name" : "assign", "result" : "SUCCESS"}, {"name" : "stack_race", "result" : "FAIL"}
  ]},
  {"name": "vperm/stack_race.ss", "flags": "--ann-vp", "checks": [
    {"name" : "assign", "result" : "SUCCESS"}, {"name" : "stack_race", "result" : "FAIL"}
  ]},
  {"name": "vperm/quicksort.ss", "flags": "--ann-vp", "checks": [
    {"name" : "partition", "result" : "SUCCESS"}, {"name" : "append_bll", "result" : "SUCCESS"}, {"name" : "para_qsort2", "result" : "SUCCESS"}
  ]},
  {"name": "vperm/task_decompose.ss", "flags": "", "checks": [
    {"name" : "inc", "result" : "SUCCESS"}, {"name" : "creator", "result" : "SUCCESS"}, {"name" : "joiner", "result" : "SUCCESS"}, {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "vperm/threads.ss", "flags": "--ann-vp", "checks": [
    {"name" : "make_tree", "result" : "SUCCESS"}, {"name" : "tree_compute_sum_facs", "result" : "SUCCESS"}, {"name" : "summator", "result" : "SUCCESS"}, {"name" : "start_sum_thread", "result" : "SUCCESS"}, {"name" : "join_sum_thread", "result" : "SUCCESS"}, {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "vperm/tree_count.ss", "flags": "--ann-vp", "checks": [
    {"name" : "parallelCount2", "result" : "SUCCESS"}
  ]},
  {"name": "vperm/tree_search.ss", "flags": "--ann-vp -tp mona -perm none", "checks": [
    {"name" : "para_search2", "result" : "SUCCESS"}
  ]},
  {"name": "vperm/vperm_check.ss", "flags": "--ann-vp", "checks": [
    {"name" : "inc", "result" : "SUCCESS"}, {"name" : "incCell", "result" : "SUCCESS"}, {"name" : "test1", "result" : "FAIL"}, {"name" : "test2", "result" : "FAIL"}, {"name" : "test3", "result" : "FAIL"}, {"name" : "test4", "result" : "FAIL"}
  ]},
  {"name": "vperm/vperm_simple.ss", "flags": "--ann-vp", "checks": [
    {"name" : "foo", "result" : "SUCCESS"}, {"name" : "f", "result" : "SUCCESS"}, {"name" : "foo2", "result" : "SUCCESS"}, {"name" : "f2", "result" : "SUCCESS"}
  ]}
  ],
  "hip_baga": [
  {"name": "eps.ss", "flags": "--use-baga", "checks": [
    {"name" : "get_next", "result" : "SUCCESS"}, {"name" : "get_next_next", "result" : "SUCCESS"}
  ]},
  {"name": "append.ss", "flags": "--use-baga", "checks": [
    {"name" : "append", "result" : "SUCCESS"}
  ]},
  {"name": "append-tail.ss", "flags": "--use-baga", "checks": [
    {"name" : "append", "result" : "SUCCESS"}
  ]},
  {"name": "avl-bind.ss", "flags": "--use-baga", "checks": [
    {"name" : "height", "result" : "SUCCESS"}, {"name" : "rotate_left", "result" : "SUCCESS"}, {"name" : "rotate_right", "result" : "SUCCESS"}, {"name" : "get_max", "result" : "SUCCESS"}, {"name" : "rotate_double_left", "result" : "SUCCESS"}, {"name" : "rotate_double_right", "result" : "SUCCESS"}, {"name" : "build_avl1", "result" : "SUCCESS"}, {"name" : "build_avl2", "result" : "SUCCESS"}, {"name" : "insert", "result" : "SUCCESS"}
  ]},
  {"name": "avl.ss", "flags": "--use-baga", "checks": [
    {"name" : "height", "result" : "SUCCESS"}, {"name" : "rotate_left", "result" : "SUCCESS"}, {"name" : "rotate_right", "result" : "SUCCESS"}, {"name" : "get_max", "result" : "SUCCESS"}, {"name" : "rotate_double_left", "result" : "SUCCESS"}, {"name" : "rotate_double_right", "result" : "SUCCESS"}, {"name" : "build_avl1", "result" : "SUCCESS"}, {"name" : "build_avl2", "result" : "SUCCESS"}, {"name" : "insert", "result" : "SUCCESS"}, {"name" : "insert_inline", "result" : "SUCCESS"}
  ]},
  {"name": "avl-orig-2.ss", "flags": "--use-baga", "checks": [
    {"name" : "height", "result" : "SUCCESS"}, {"name" : "get_max", "result" : "SUCCESS"}, {"name" : "insert", "result" : "SUCCESS"}, {"name" : "double_left_child", "result" : "SUCCESS"}, {"name" : "double_right_child", "result" : "SUCCESS"}, {"name" : "rotate_left_child", "result" : "SUCCESS"}, {"name" : "rotate_right_child", "result" : "SUCCESS"}
  ]},
  {"name": "avl-orig3.ss", "flags": "--use-baga", "checks": [
    {"name" : "height", "result" : "SUCCESS"}, {"name" : "get_max", "result" : "SUCCESS"}, {"name" : "insert", "result" : "SUCCESS"}, {"name" : "double_left_child", "result" : "SUCCESS"}, {"name" : "double_right_child", "result" : "SUCCESS"}, {"name" : "rotate_left_child", "result" : "SUCCESS"}, {"name" : "rotate_right_child", "result" : "SUCCESS"}
  ]},
  {"name": "bll.ss", "flags": "--use-baga", "checks": [
    {"name" : "insert", "result" : "SUCCESS"}, {"name" : "delete", "result" : "SUCCESS"}
  ]},
  {"name": "bubble.ss", "flags": "--use-baga", "checks": [
    {"name" : "id2", "result" : "SUCCESS"}, {"name" : "id3", "result" : "SUCCESS"}, {"name" : "bubble", "result" : "SUCCESS"}, {"name" : "bsort", "result" : "SUCCESS"}
  ]},
  {"name": "cll.ss", "flags": "--use-baga", "checks": [
    {"name" : "test", "result" : "SUCCESS"}, {"name" : "insert", "result" : "SUCCESS"}, {"name" : "count_rest", "result" : "SUCCESS"}, {"name" : "count", "result" : "SUCCESS"}, {"name" : "delete", "result" : "SUCCESS"}
  ]},
  {"name": "complete.ss", "flags": "--use-baga", "checks": [
    {"name" : "maxim", "result" : "SUCCESS"}, {"name" : "minim", "result" : "SUCCESS"}, {"name" : "height", "result" : "SUCCESS"}, {"name" : "min_height", "result" : "SUCCESS"}, {"name" : "insert", "result" : "SUCCESS"}
  ]},
  {"name": "dll.ss", "flags": "--use-baga", "checks": [
    {"name" : "insert", "result" : "SUCCESS"}, {"name" : "delete", "result" : "SUCCESS"}, {"name" : "delete1", "result" : "SUCCESS"}, {"name" : "test_del", "result" : "SUCCESS"}, {"name" : "test_del2", "result" : "SUCCESS"}, {"name" : "test_fold", "result" : "SUCCESS"}, {"name" : "append", "result" : "SUCCESS"}, {"name" : "append1", "result" : "SUCCESS"}, {"name" : "f1", "result" : "SUCCESS"}, {"name" : "f2", "result" : "SUCCESS"}
  ]},
  {"name": "heaps.ss", "flags": "--use-baga", "checks": [
    {"name" : "insert", "result" : "SUCCESS"}, {"name" : "deleteoneel", "result" : "SUCCESS"}, {"name" : "deleteone", "result" : "SUCCESS"}, {"name" : "ripple", "result" : "SUCCESS"}, {"name" : "deletemax", "result" : "SUCCESS"}
  ]},
  {"name": "insertion.ss", "flags": "--use-baga", "checks": [
    {"name" : "insert", "result" : "SUCCESS"}, {"name" : "insertion_sort", "result" : "SUCCESS"}
  ]},
  {"name": "ll.ss", "flags": "--use-baga", "checks": [
    {"name" : "append", "result" : "SUCCESS"}, {"name" : "ret_first", "result" : "SUCCESS"}, {"name" : "get_next", "result" : "SUCCESS"}, {"name" : "set_next", "result" : "SUCCESS"}, {"name" : "set_null", "result" : "SUCCESS"}, {"name" : "get_next_next", "result" : "SUCCESS"}, {"name" : "insert", "result" : "SUCCESS"}, {"name" : "delete", "result" : "SUCCESS"}, {"name" : "create_list", "result" : "SUCCESS"}, {"name" : "reverse", "result" : "SUCCESS"}
  ]},
  {"name": "merge.ss", "flags": "--use-baga", "checks": [
    {"name" : "count", "result" : "SUCCESS"}, {"name" : "split_func", "result" : "SUCCESS"}, {"name" : "merge_sort", "result" : "SUCCESS"}, {"name" : "merge", "result" : "SUCCESS"}, {"name" : "insert", "result" : "SUCCESS"}
  ]},
  {"name": "perfect.ss", "flags": "--use-baga", "checks": [
    {"name" : "simple_insert", "result" : "SUCCESS"}, {"name" : "create", "result" : "SUCCESS"}, {"name" : "maxim", "result" : "SUCCESS"}, {"name" : "height", "result" : "SUCCESS"}, {"name" : "insert", "result" : "SUCCESS"}
  ]},
  {"name": "qsort.ss", "flags": "--use-baga", "checks": [
    {"name" : "partition", "result" : "SUCCESS"}, {"name" : "append_bll", "result" : "SUCCESS"}, {"name" : "qsort", "result" : "SUCCESS"}
  ]},
  {"name": "selection.ss", "flags": "--use-baga", "checks": [
    {"name" : "find_min", "result" : "SUCCESS"}, {"name" : "delete_min", "result" : "SUCCESS"}, {"name" : "selection_sort", "result" : "SUCCESS"}
  ]},
  {"name": "sll.ss", "flags": "--use-baga", "checks": [
    {"name" : "insert", "result" : "SUCCESS"}, {"name" : "insert2", "result" : "SUCCESS"}, {"name" : "delete", "result" : "SUCCESS"}, {"name" : "get_tail", "result" : "SUCCESS"}, {"name" : "insertion_sort", "result" : "SUCCESS"}, {"name" : "id", "result" : "SUCCESS"}
  ]},
  {"name": "trees.ss", "flags": "--use-baga", "checks": [
    {"name" : "append", "result" : "SUCCESS"}, {"name" : "count", "result" : "SUCCESS"}, {"name" : "flatten", "result" : "SUCCESS"}, {"name" : "insert", "result" : "SUCCESS"}, {"name" : "remove_min", "result" : "SUCCESS"}, {"name" : "delete", "result" : "SUCCESS"}
  ]},
  {"name": "rb.ss", "flags": "--use-baga --dis-ptr-arith", "checks": [
    {"name" : "rotate_case_3", "result" : "SUCCESS"}, {"name" : "case_2", "result" : "SUCCESS"}, {"name" : "rotate_case_3r", "result" : "SUCCESS"}, {"name" : "case_2r", "result" : "SUCCESS"}, {"name" : "is_red", "result" : "SUCCESS"}, {"name" : "is_black", "result" : "SUCCESS"}, {"name" : "del_6", "result" : "SUCCESS"}, {"name" : "del_6r", "result" : "SUCCESS"}, {"name" : "del_5", "result" : "SUCCESS"}, {"name" : "del_5r", "result" : "SUCCESS"}, {"name" : "del_4", "result" : "SUCCESS"}, {"name" : "del_4r", "result" : "SUCCESS"}, {"name" : "del_3", "result" : "SUCCESS"}, {"name" : "del_3r", "result" : "SUCCESS"}, {"name" : "del_2", "result" : "SUCCESS"}, {"name" : "remove_min", "result" : "SUCCESS"}, {"name" : "del", "result" : "SUCCESS"}, {"name" : "insert", "result" : "SUCCESS"}
  ]},
  {"name": "global-ll.ss", "flags": "--use-baga", "checks": [
    {"name" : "insert_rec", "result" : "SUCCESS"}, {"name" : "delete_last_rec", "result" : "SUCCESS"}, {"name" : "insert", "result" : "SUCCESS"}, {"name" : "delete_last", "result" : "SUCCESS"}, {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "modular_examples/dll-modular.ss", "flags": "--overeps --use-baga", "checks": [
    {"name" : "append", "result" : "SUCCESS"}, {"name" : "append1", "result" : "SUCCESS"}, {"name" : "append2", "result" : "SUCCESS"}, {"name" : "delete", "result" : "SUCCESS"}, {"name" : "delete1", "result" : "SUCCESS"}, {"name" : "f1", "result" : "SUCCESS"}, {"name" : "f2", "result" : "SUCCESS"}, {"name" : "insert", "result" : "SUCCESS"}, {"name" : "test_del", "result" : "SUCCESS"}, {"name" : "test_del2", "result" : "SUCCESS"}, {"name" : "test_fold", "result" : "SUCCESS"}
  ]},
  {"name": "modular_examples/selection-modular.ss", "flags": "--overeps --lda --use-baga", "checks": [
    {"name" : "delete_min", "result" : "SUCCESS"}, {"name" : "find_min", "result" : "SUCCESS"}, {"name" : "selection_sort", "result" : "SUCCESS"}
  ]},
  {"name": "modular_examples/qsort-modular.ss", "flags": "--overeps --lda --use-baga", "checks": [
    {"name" : "append_bll", "result" : "SUCCESS"}, {"name" : "partition", "result" : "SUCCESS"}, {"name" : "qsort", "result" : "SUCCESS"}
  ]}
  ],
  "hip_veribsync": [
  {"name": "veribsync/while-loop.ss", "flags": "--en-para -perm bperm -tp redlog", "checks": [
    {"name" : "fun", "result" : "SUCCESS"}, {"name" : "fun3", "result" : "SUCCESS"}, {"name" : "loop_fun", "result" : "SUCCESS"}, {"name" : "loop_fun3", "result" : "SUCCESS"}
  ]},
  {"name": "veribsync/while-loop2.ss", "flags": "--en-para -perm bperm -tp redlog", "checks": [
    {"name" : "fun", "result" : "SUCCESS"}, {"name" : "fun3", "result" : "SUCCESS"}, {"name" : "fun4", "result" : "SUCCESS"}, {"name" : "fun5", "result" : "SUCCESS"}, {"name" : "fun6", "result" : "SUCCESS"}, {"name" : "fun7", "result" : "SUCCESS"}, {"name" : "fun8", "result" : "SUCCESS"}, {"name" : "fun9", "result" : "SUCCESS"}
  ]},
  {"name": "veribsync/hip-bperm1.ss", "flags": "--en-para -perm bperm -tp redlog", "checks": [
    {"name" : "destroyCellFail", "result" : "FAIL"}, {"name" : "readCell", "result" : "SUCCESS"}, {"name" : "testNewCell", "result" : "SUCCESS"}, {"name" : "testNewCell2", "result" : "SUCCESS"}, {"name" : "updateCell", "result" : "SUCCESS"}, {"name" : "updateCellFail", "result" : "FAIL"}
  ]},
  {"name": "veribsync/bperm-exp.ss", "flags": "--en-para -perm bperm -tp redlog", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "thread1", "result" : "SUCCESS"}, {"name" : "thread2", "result" : "SUCCESS"}, {"name" : "thread3", "result" : "SUCCESS"}
  ]},
  {"name": "veribsync/barrier-static-primitives.ss", "flags": "--en-para -perm bperm -tp redlog", "checks": [
    {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "veribsync/barrier-static-exp1.ss", "flags": "--en-para -perm bperm -tp redlog", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "thread1", "result" : "SUCCESS"}, {"name" : "thread2", "result" : "SUCCESS"}
  ]},
  {"name": "veribsync/barrier-static-exp2.ss", "flags": "--en-para -perm bperm -tp redlog", "checks": [
    {"name" : "main", "result" : "FAIL"}, {"name" : "thread1", "result" : "SUCCESS"}, {"name" : "thread2", "result" : "SUCCESS"}
  ]},
  {"name": "veribsync/barrier-static-exp3.ss", "flags": "--en-para -perm bperm -tp redlog", "checks": [
    {"name" : "main", "result" : "FAIL"}, {"name" : "thread1", "result" : "SUCCESS"}, {"name" : "thread2", "result" : "SUCCESS"}
  ]},
  {"name": "veribsync/barrier-static-complex.ss", "flags": "--en-para -perm bperm -tp redlog", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "thread1", "result" : "SUCCESS"}, {"name" : "thread2", "result" : "SUCCESS"}
  ]},
  {"name": "veribsync/barrier-static-complex2.ss", "flags": "--en-para -perm bperm -tp redlog", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "thread1", "result" : "SUCCESS"}, {"name" : "thread2", "result" : "SUCCESS"}
  ]},
  {"name": "veribsync/barrier-static-complex3.ss", "flags": "--en-para -perm bperm -tp redlog", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "thread", "result" : "SUCCESS"}
  ]},
  {"name": "veribsync/barrier-static-multiple.ss", "flags": "--en-para -perm bperm -tp redlog", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "main_fail", "result" : "SUCCESS"}, {"name" : "participant", "result" : "SUCCESS"}, {"name" : "participant_fail", "result" : "FAIL"}
  ]},
  {"name": "veribsync/barrier-static-consistency.ss", "flags": "--en-para -perm bperm -tp redlog", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "main_fail", "result" : "FAIL"}, {"name" : "participant", "result" : "SUCCESS"}, {"name" : "participant1", "result" : "SUCCESS"}, {"name" : "participant_fail", "result" : "FAIL"}
  ]},
  {"name": "veribsync/barrier-dynamic-exp1.ss", "flags": "--en-para -perm bperm -tp redlog", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "thread1", "result" : "SUCCESS"}, {"name" : "thread2", "result" : "SUCCESS"}, {"name" : "thread3", "result" : "SUCCESS"}
  ]},
  {"name": "veribsync/barrier-dynamic-exp2.ss", "flags": "--en-para -perm bperm -tp redlog", "checks": [
    {"name" : "main", "result" : "FAIL"}, {"name" : "thread1", "result" : "SUCCESS"}, {"name" : "thread2", "result" : "SUCCESS"}, {"name" : "thread3", "result" : "SUCCESS"}
  ]},
  {"name": "veribsync/barrier-dynamic-exp3.ss", "flags": "--en-para -perm bperm -tp redlog", "checks": [
    {"name" : "main", "result" : "FAIL"}, {"name" : "thread1", "result" : "SUCCESS"}, {"name" : "thread2", "result" : "SUCCESS"}, {"name" : "thread3", "result" : "SUCCESS"}
  ]},
  {"name": "veribsync/barrier-dynamic-exp4.ss", "flags": "--en-para -perm bperm -tp redlog", "checks": [
    {"name" : "childthread1", "result" : "SUCCESS"}, {"name" : "childthread2", "result" : "SUCCESS"}, {"name" : "main", "result" : "SUCCESS"}, {"name" : "thread1", "result" : "SUCCESS"}, {"name" : "thread2", "result" : "SUCCESS"}
  ]},
  {"name": "veribsync/barrier-dynamic-exp5.ss", "flags": "--en-para -perm bperm -tp redlog", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "thread", "result" : "SUCCESS"}
  ]},
  {"name": "veribsync/barrier-dynamic-exp6.ss", "flags": "--en-para -perm bperm -tp redlog", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "thread1", "result" : "SUCCESS"}, {"name" : "thread2", "result" : "SUCCESS"}
  ]},
  {"name": "veribsync/barrier-dynamic-exp7.ss", "flags": "--en-para -perm bperm -tp redlog", "checks": [
    {"name" : "CalculationInTask", "result" : "SUCCESS"}, {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "veribsync/benchmark/barnes.ss", "flags": "--en-para -perm bperm -tp redlog", "checks": [
    {"name" : "ANLinit", "result" : "SUCCESS"}, {"name" : "ComputeForces", "result" : "SUCCESS"}, {"name" : "Housekeep", "result" : "SUCCESS"}, {"name" : "find_my_bodies", "result" : "SUCCESS"}, {"name" : "hackcofm", "result" : "SUCCESS"}, {"name" : "maketree", "result" : "SUCCESS"}, {"name" : "stepsystem", "result" : "SUCCESS"}, {"name" : "find_my_initial_bodies", "result" : "SUCCESS"}, {"name" : "SlaveStart", "result" : "SUCCESS"}, {"name" : "diagnostics", "result" : "SUCCESS"}, {"name" : "initoutput", "result" : "SUCCESS"}, {"name" : "initparam", "result" : "SUCCESS"}, {"name" : "startrun", "result" : "SUCCESS"}, {"name" : "tab_init", "result" : "SUCCESS"}, {"name" : "main", "result" : "SUCCESS"}, {"name" : "output", "result" : "SUCCESS"}
  ]},
  {"name": "veribsync/benchmark/fmm.ss", "flags": "--en-para -perm bperm -tp redlog", "checks": [
    {"name" : "MergeLocalGridSize", "result" : "SUCCESS"}, {"name" : "DetermineGridSize", "result" : "SUCCESS"}, {"name" : "MergeLocalGrid", "result" : "SUCCESS"}, {"name" : "ConstructGrid", "result" : "SUCCESS"}, {"name" : "ConstructLists", "result" : "SUCCESS"}, {"name" : "CostZonesHelper", "result" : "SUCCESS"}, {"name" : "CostZones", "result" : "SUCCESS"}, {"name" : "ZeroBox", "result" : "SUCCESS"}, {"name" : "CreateBoxes", "result" : "SUCCESS"}, {"name" : "CreateDistribution", "result" : "SUCCESS"}, {"name" : "CreateParticleList", "result" : "SUCCESS"}, {"name" : "gets", "result" : "SUCCESS"}, {"name" : "GetArguments", "result" : "SUCCESS"}, {"name" : "InitExpTables", "result" : "SUCCESS"}, {"name" : "InitGlobalMemory", "result" : "SUCCESS"}, {"name" : "InitParticleList", "result" : "SUCCESS"}, {"name" : "PartitionGrid", "result" : "SUCCESS"}, {"name" : "StepSimulation", "result" : "SUCCESS"}, {"name" : "generateNumBoxes", "result" : "SUCCESS"}, {"name" : "ParallelExecute", "result" : "SUCCESS"}, {"name" : "PrintGrid", "result" : "SUCCESS"}, {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "veribsync/benchmark/ocean.ss", "flags": "--en-para -perm bperm -tp redlog", "checks": [
    {"name" : "gets", "result" : "SUCCESS"}, {"name" : "main", "result" : "SUCCESS"}, {"name" : "multig", "result" : "SUCCESS"}, {"name" : "slave2", "result" : "SUCCESS"}, {"name" : "slave", "result" : "SUCCESS"}
  ]},
  {"name": "veribsync/benchmark/raytrace.ss", "flags": "--en-para -perm bperm -tp redlog", "checks": [
    {"name" : "BuildHierarchy_Uniform", "result" : "SUCCESS"}, {"name" : "PrintStatistics", "result" : "SUCCESS"}, {"name" : "ReadEnvFile", "result" : "SUCCESS"}, {"name" : "ReadGeoFile", "result" : "SUCCESS"}, {"name" : "StartRayTrace", "result" : "SUCCESS"}, {"name" : "gets", "result" : "SUCCESS"}, {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "veribsync/benchmark/volrend.ss", "flags": "--en-para -perm bperm -tp redlog", "checks": [
    {"name" : "Compute_Base", "result" : "SUCCESS"}, {"name" : "Compute_Normal", "result" : "SUCCESS"}, {"name" : "Compute_Octree", "result" : "SUCCESS"}, {"name" : "Compute_Opacity", "result" : "SUCCESS"}, {"name" : "Init_Decomposition", "result" : "SUCCESS"}, {"name" : "Init_Options", "result" : "SUCCESS"}, {"name" : "Load_Map", "result" : "SUCCESS"}, {"name" : "Load_Normal", "result" : "SUCCESS"}, {"name" : "Load_Opacity", "result" : "SUCCESS"}, {"name" : "Frame", "result" : "SUCCESS"}, {"name" : "Normal_Compute", "result" : "SUCCESS"}, {"name" : "Opacity_Compute", "result" : "SUCCESS"}, {"name" : "Or_Neighbors_In_Base", "result" : "SUCCESS"}, {"name" : "Ray_Trace", "result" : "SUCCESS"}, {"name" : "Render", "result" : "SUCCESS"}, {"name" : "Render_Loop", "result" : "SUCCESS"}, {"name" : "getAdaptive", "result" : "SUCCESS"}, {"name" : "getNumNodes", "result" : "SUCCESS"}, {"name" : "getRotateSteps", "result" : "SUCCESS"}, {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "veribsync/benchmark/water-nsquared.ss", "flags": "--en-para -perm bperm -tp redlog", "checks": [
    {"name" : "INTERF", "result" : "SUCCESS"}, {"name" : "INTRAF", "result" : "SUCCESS"}, {"name" : "POTENG", "result" : "SUCCESS"}, {"name" : "PREDIC", "result" : "SUCCESS"}, {"name" : "MDMAIN", "result" : "SUCCESS"}, {"name" : "WorkStart", "result" : "SUCCESS"}, {"name" : "getNPRINT", "result" : "SUCCESS"}, {"name" : "getNSAVE", "result" : "SUCCESS"}, {"name" : "getNSTEP", "result" : "SUCCESS"}, {"name" : "gets", "result" : "SUCCESS"}, {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "veribsync/benchmark/water-spatial.ss", "flags": "--en-para -perm bperm -tp redlog", "checks": [
    {"name" : "INTERF", "result" : "SUCCESS"}, {"name" : "INTRAF", "result" : "SUCCESS"}, {"name" : "POTENG", "result" : "SUCCESS"}, {"name" : "PREDIC", "result" : "SUCCESS"}, {"name" : "MDMAIN", "result" : "SUCCESS"}, {"name" : "WorkStart", "result" : "SUCCESS"}, {"name" : "getNPRINT", "result" : "SUCCESS"}, {"name" : "getNSAVE", "result" : "SUCCESS"}, {"name" : "getNSTEP", "result" : "SUCCESS"}, {"name" : "gets", "result" : "SUCCESS"}, {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "veribsync/benchmark/cholesky.ss", "flags": "--en-para -perm bperm -tp redlog", "checks": [
    {"name" : "AssignBlocksNow", "result" : "SUCCESS"}, {"name" : "ComputeTargetBlockSize", "result" : "SUCCESS"}, {"name" : "PreProcessFO", "result" : "SUCCESS"}, {"name" : "Go", "result" : "SUCCESS"}, {"name" : "InitOneFreeList", "result" : "SUCCESS"}, {"name" : "MallocInit", "result" : "SUCCESS"}, {"name" : "ReadSparse", "result" : "SUCCESS"}, {"name" : "gets", "result" : "SUCCESS"}, {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "veribsync/benchmark/fft.ss", "flags": "--en-para -perm bperm -tp redlog", "checks": [
    {"name" : "FFT1DOnce", "result" : "SUCCESS"}, {"name" : "FFT1D", "result" : "SUCCESS"}, {"name" : "SlaveStart", "result" : "SUCCESS"}, {"name" : "gets", "result" : "SUCCESS"}, {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "veribsync/benchmark/lu.ss", "flags": "--en-para -perm bperm -tp redlog", "checks": [
    {"name" : "lu", "result" : "SUCCESS"}, {"name" : "OneSolve", "result" : "SUCCESS"}, {"name" : "SlaveStart", "result" : "SUCCESS"}, {"name" : "gets", "result" : "SUCCESS"}, {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "veribsync/benchmark/radix.ss", "flags": "--en-para -perm bperm -tp redlog", "checks": [
    {"name" : "getNumProcs", "result" : "SUCCESS"}, {"name" : "main", "result" : "SUCCESS"}, {"name" : "slave_sort", "result" : "SUCCESS"}
  ]},
  {"name": "veribsync/benchmark/radiosity.ss", "flags": "--en-para -perm bperm -tp redlog", "checks": [
    {"name" : "init_ray_tasks", "result" : "SUCCESS"}, {"name" : "process_tasks", "result" : "SUCCESS"}, {"name" : "init_global", "result" : "SUCCESS"}, {"name" : "init_visibility_module", "result" : "SUCCESS"}, {"name" : "input", "result" : "SUCCESS"}, {"name" : "parse_args", "result" : "SUCCESS"}, {"name" : "main", "result" : "SUCCESS"}, {"name" : "radiosity", "result" : "FAIL"}
  ]}
  ],
  "hip_long_mod": [
  {"name": "../../modular_examples/sorted_list_modular.ss", "flags": "--overeps -tp om", "checks": [
    {"name" : "insert_first", "result" : "SUCCESS"}, {"name" : "copy", "result" : "SUCCESS"}, {"name" : "delete", "result" : "SUCCESS"}, {"name" : "double_reverse", "result" : "SUCCESS"}, {"name" : "insert", "result" : "SUCCESS"}, {"name" : "insert_last", "result" : "SUCCESS"}, {"name" : "merge", "result" : "SUCCESS"}, {"name" : "reverse", "result" : "SUCCESS"}
  ]},
  {"name": "../../modular_examples/complete-modular.ss", "flags": "--overeps", "checks": [
    {"name" : "maxim", "result" : "SUCCESS"}, {"name" : "height", "result" : "SUCCESS"}, {"name" : "minim", "result" : "SUCCESS"}, {"name" : "min_height", "result" : "SUCCESS"}, {"name" : "insert", "result" : "SUCCESS"}
  ]}
  ],
  "mem": [
  {"name": "dag.ss", "flags": "-tp om --mem --ramify", "checks": [
    {"name" : "mark", "result" : "SUCCESS"}, {"name" : "mark2", "result" : "SUCCESS"}
  ]},
  {"name": "dag_values.ss", "flags": "-tp om --mem --ramify", "checks": [
    {"name" : "mark", "result" : "SUCCESS"}, {"name" : "mark2", "result" : "SUCCESS"}
  ]},
  {"name": "dag_values_infer.ss", "flags": "-tp om --mem --ramify --infer-mem", "checks": [
    {"name" : "mark", "result" : "SUCCESS"}, {"name" : "mark2", "result" : "SUCCESS"}
  ]},
  {"name": "graph.ss", "flags": "-tp om --mem --ramify", "checks": [
    {"name" : "mark", "result" : "SUCCESS"}, {"name" : "mark2", "result" : "SUCCESS"}
  ]},
  {"name": "graph_values.ss", "flags": "-tp om --mem --ramify", "checks": [
    {"name" : "mark", "result" : "SUCCESS"}, {"name" : "mark2", "result" : "SUCCESS"}
  ]},
  {"name": "graph_values_infer.ss", "flags": "-tp om --mem --ramify --infer-mem", "checks": [
    {"name" : "mark", "result" : "SUCCESS"}, {"name" : "mark2", "result" : "SUCCESS"}
  ]},
  {"name": "dag_1.ss", "flags": "-tp om --mem --ramify", "checks": [
    {"name" : "mark", "result" : "SUCCESS"}
  ]},
  {"name": "dag_1_ramify.ss", "flags": "-tp om --mem --ramify", "checks": [
    {"name" : "mark", "result" : "SUCCESS"}
  ]},
  {"name": "graph_1.ss", "flags": "-tp om --mem --ramify", "checks": [
    {"name" : "mark", "result" : "SUCCESS"}
  ]},
  {"name": "graph_1_ramify.ss", "flags": "-tp om --mem --ramify", "checks": [
    {"name" : "mark", "result" : "SUCCESS"}
  ]},
  {"name": "dag_copy.ss", "flags": "-tp om --mem --ramify", "checks": [
    {"name" : "copy_dag", "result" : "SUCCESS"}
  ]},
  {"name": "garbage_collector.ss", "flags": "-tp om --mem --ramify", "checks": [
    {"name" : "mark", "result" : "SUCCESS"}, {"name" : "sweep", "result" : "SUCCESS"}, {"name" : "collect", "result" : "SUCCESS"}
  ]},
  {"name": "garbage_collector_values.ss", "flags": "-tp om --mem --ramify", "checks": [
    {"name" : "mark", "result" : "SUCCESS"}, {"name" : "sweep", "result" : "SUCCESS"}, {"name" : "collect", "result" : "SUCCESS"}
  ]},
  {"name": "garbage_collector_values_infer.ss", "flags": "-tp om --mem --ramify --infer-mem", "checks": [
    {"name" : "mark", "result" : "SUCCESS"}, {"name" : "sweep", "result" : "SUCCESS"}, {"name" : "collect", "result" : "SUCCESS"}
  ]},
  {"name": "llsortll.ss", "flags": "-tp om --mem --eps", "checks": [
    {"name" : "overlaid_insert", "result" : "SUCCESS"}, {"name" : "delete2", "result" : "SUCCESS"}, {"name" : "insert2", "result" : "SUCCESS"}, {"name" : "get_tail", "result" : "SUCCESS"}, {"name" : "insertion_sort", "result" : "SUCCESS"}, {"name" : "id", "result" : "SUCCESS"}
  ]},
  {"name": "infer_llsortll.ss", "flags": "-tp om --mem --eps --infer-mem", "checks": [
    {"name" : "overlaid_insert", "result" : "SUCCESS"}, {"name" : "delete2", "result" : "SUCCESS"}, {"name" : "insert2", "result" : "SUCCESS"}, {"name" : "get_tail", "result" : "SUCCESS"}, {"name" : "insertion_sort", "result" : "SUCCESS"}, {"name" : "id", "result" : "SUCCESS"}
  ]},
  {"name": "lltree.ss", "flags": "-tp om --mem", "checks": [
    {"name" : "move_request", "result" : "SUCCESS"}
  ]},
  {"name": "infer_lltree.ss", "flags": "-tp om --mem --infer-mem", "checks": [
    {"name" : "move_request", "result" : "SUCCESS"}
  ]},
  {"name": "lltree2.ss", "flags": "-tp om --mem --eps", "checks": [
    {"name" : "move_request", "result" : "SUCCESS"}
  ]},
  {"name": "infer_lltree2.ss", "flags": "-tp om --mem --eps --infer-mem", "checks": [
    {"name" : "move_request", "result" : "SUCCESS"}
  ]},
  {"name": "nodell.ss", "flags": "-tp om --mem --ramify", "checks": [
    {"name" : "delete_cache", "result" : "SUCCESS"}, {"name" : "delete", "result" : "SUCCESS"}, {"name" : "add_L", "result" : "SUCCESS"}, {"name" : "caching", "result" : "SUCCESS"}, {"name" : "add_in", "result" : "SUCCESS"}, {"name" : "find", "result" : "SUCCESS"}
  ]},
  {"name": "nodell_infer.ss", "flags": "-tp om --mem --ramify --infer-mem", "checks": [
    {"name" : "delete_cache", "result" : "SUCCESS"}, {"name" : "delete", "result" : "SUCCESS"}, {"name" : "add_L", "result" : "SUCCESS"}, {"name" : "caching", "result" : "SUCCESS"}, {"name" : "add_in", "result" : "SUCCESS"}, {"name" : "find", "result" : "SUCCESS"}
  ]},
  {"name": "pll.ss", "flags": "-tp om --mem", "checks": [
    {"name" : "length", "result" : "SUCCESS"}, {"name" : "sum", "result" : "SUCCESS"}
  ]},
  {"name": "pll_ramify.ss", "flags": "-tp om --mem --ramify", "checks": [
    {"name" : "length", "result" : "SUCCESS"}, {"name" : "sum", "result" : "SUCCESS"}
  ]},
  {"name": "pll_infer.ss", "flags": "-tp om --mem --infer-mem", "checks": [
    {"name" : "length", "result" : "SUCCESS"}, {"name" : "sum", "result" : "SUCCESS"}
  ]},
  {"name": "pll_ramify_infer.ss", "flags": "-tp om --mem --ramify --infer-mem", "checks": [
    {"name" : "length", "result" : "SUCCESS"}, {"name" : "sum", "result" : "SUCCESS"}
  ]},
  {"name": "doubly_circular_list.ss", "flags": "-tp om --mem", "checks": [
    {"name" : "insert_node_dcll", "result" : "SUCCESS"}, {"name" : "insert_lln", "result" : "SUCCESS"}, {"name" : "insert_llt", "result" : "SUCCESS"}, {"name" : "insert_dcll", "result" : "SUCCESS"}
  ]},
  {"name": "infer_doubly_circular_list.ss", "flags": "-tp om --mem --infer-mem", "checks": [
    {"name" : "insert_node_dcll", "result" : "SUCCESS"}, {"name" : "insert_lln", "result" : "SUCCESS"}, {"name" : "insert_llt", "result" : "SUCCESS"}, {"name" : "insert_dcll", "result" : "SUCCESS"}
  ]},
  {"name": "process_schedular.ss", "flags": "-tp om --mem", "checks": [
    {"name" : "insert_process", "result" : "SUCCESS"}, {"name" : "insert_rll", "result" : "SUCCESS"}, {"name" : "insert_pll", "result" : "SUCCESS"}, {"name" : "insert_sll", "result" : "SUCCESS"}
  ]},
  {"name": "process_schedular_ramify.ss", "flags": "-tp om --mem --ramify", "checks": [
    {"name" : "insert_process", "result" : "SUCCESS"}, {"name" : "insert_rll", "result" : "SUCCESS"}, {"name" : "insert_pll", "result" : "SUCCESS"}, {"name" : "insert_sll", "result" : "SUCCESS"}
  ]},
  {"name": "ramified-cells.ss", "flags": "--mem --ramify", "checks": [
    {"name" : "ex0", "result" : "SUCCESS"}, {"name" : "ex1", "result" : "SUCCESS"}, {"name" : "mark", "result" : "SUCCESS"}
  ]},
  {"name": "ramified-pairs.ss", "flags": "--mem --ramify", "checks": [
    {"name" : "mark", "result" : "SUCCESS"}
  ]},
  {"name": "jsvarstore.ss", "flags": "--mem --ramify", "checks": [
    {"name" : "ex1", "result" : "SUCCESS"}
  ]},
  {"name": "graph_spanning.ss", "flags": "-tp om --mem --ramify --eps", "checks": [
    {"name" : "spanning", "result" : "SUCCESS"}
  ]},
  {"name": "graph_spanning_infer.ss", "flags": "-tp om --mem --ramify --eps --infer-mem", "checks": [
    {"name" : "spanning", "result" : "SUCCESS"}
  ]}
  ],
  "coqinf": [
  {"name": "inflist.ss", "flags": "--en-inf", "checks": [
    {"name" : "remove", "result" : "SUCCESS"}, {"name" : "append", "result" : "SUCCESS"}, {"name" : "fail_remove", "result" : "FAIL"}
  ]},
  {"name": "infll_take.ss", "flags": "--en-inf", "checks": [
    {"name" : "take", "result" : "SUCCESS"}
  ]},
  {"name": "inftree.ss", "flags": "--en-inf", "checks": [
    {"name" : "count", "result" : "SUCCESS"}
  ]},
  {"name": "stream.ss", "flags": "--en-inf", "checks": [
    {"name" : "zip", "result" : "SUCCESS"}
  ]},
  {"name": "bst-inf.ss", "flags": "--en-inf --eps --etcsu2 --etcsu3", "checks": [
    {"name" : "delete", "result" : "SUCCESS"}, {"name" : "remove_min", "result" : "SUCCESS"}
  ]},
  {"name": "inf-selsort.ss", "flags": "--en-inf --etcsu2 --etcsu3", "checks": [
    {"name" : "find_min", "result" : "SUCCESS"}, {"name" : "delete_min", "result" : "SUCCESS"}, {"name" : "selection_sort", "result" : "SUCCESS"}
  ]},
  {"name": "inf-ins.ss", "flags": "--dsd --en-inf", "checks": [
    {"name" : "insert", "result" : "SUCCESS"}
  ]},
  {"name": "inf-sel.ss", "flags": "--dsd --en-inf --etcsu2 --etcsu3", "checks": [
    {"name" : "find_min", "result" : "SUCCESS"}, {"name" : "delete_min", "result" : "SUCCESS"}, {"name" : "selection_sort", "result" : "SUCCESS"}
  ]},
  {"name": "bubble-inf.ss", "flags": "--en-inf", "checks": [
    {"name" : "id2", "result" : "SUCCESS"}, {"name" : "id3", "result" : "SUCCESS"}, {"name" : "bubble", "result" : "SUCCESS"}, {"name" : "bsort", "result" : "SUCCESS"}
  ]},
  {"name": "merge-inf.ss", "flags": "--en-inf --en-disj-compute --etcsu2 --etcsu3", "checks": [
    {"name" : "merge", "result" : "SUCCESS"}
  ]}
  ],
  "lists": [
  {"name": "demo.ss", "flags": "", "checks": [
    {"name" : "reverse", "result" : "SUCCESS"}, {"name" : "create_list", "result" : "SUCCESS"}, {"name" : "delete_val", "result" : "SUCCESS"}, {"name" : "delete", "result" : "SUCCESS"}, {"name" : "insert", "result" : "SUCCESS"}, {"name" : "get_next_next", "result" : "SUCCESS"}, {"name" : "set_null", "result" : "SUCCESS"}, {"name" : "set_next", "result" : "SUCCESS"}, {"name" : "get_next", "result" : "SUCCESS"}, {"name" : "ret_first", "result" : "SUCCESS"}, {"name" : "append", "result" : "SUCCESS"}
  ]},
  {"name": "demo2.ss", "flags": "", "checks": [
    {"name" : "app_rev", "result" : "SUCCESS"}, {"name" : "reverse", "result" : "SUCCESS"}, {"name" : "append", "result" : "SUCCESS"}
  ]},
  {"name": "err-coq.ss", "flags": "", "checks": [
    {"name" : "ret_first2", "result" : "SUCCESS"}, {"name" : "ret_first", "result" : "SUCCESS"}
  ]},
  {"name": "ll.ss", "flags": "", "checks": [
    {"name" : "reverse", "result" : "SUCCESS"}, {"name" : "create_list", "result" : "SUCCESS"}, {"name" : "delete_val", "result" : "SUCCESS"}, {"name" : "delete", "result" : "SUCCESS"}, {"name" : "insert", "result" : "SUCCESS"}, {"name" : "get_next_next", "result" : "SUCCESS"}, {"name" : "set_null", "result" : "SUCCESS"}, {"name" : "set_next", "result" : "SUCCESS"}, {"name" : "get_next", "result" : "SUCCESS"}, {"name" : "ret_first", "result" : "SUCCESS"}, {"name" : "append", "result" : "SUCCESS"}
  ]},
  {"name": "ll_bak.ss", "flags": "", "checks": [
    {"name" : "reverse", "result" : "SUCCESS"}, {"name" : "create_list", "result" : "SUCCESS"}, {"name" : "delete_val", "result" : "SUCCESS"}, {"name" : "delete", "result" : "SUCCESS"}, {"name" : "insert", "result" : "SUCCESS"}, {"name" : "get_next_next", "result" : "SUCCESS"}, {"name" : "set_null", "result" : "SUCCESS"}, {"name" : "set_next", "result" : "SUCCESS"}, {"name" : "get_next", "result" : "SUCCESS"}, {"name" : "ret_first", "result" : "SUCCESS"}, {"name" : "append", "result" : "SUCCESS"}
  ]},
  {"name": "ll_bak2.ss", "flags": "", "checks": [
    {"name" : "reverse", "result" : "SUCCESS"}, {"name" : "create_list", "result" : "SUCCESS"}, {"name" : "delete_val", "result" : "SUCCESS"}, {"name" : "delete", "result" : "SUCCESS"}, {"name" : "insert", "result" : "SUCCESS"}, {"name" : "get_next_next", "result" : "SUCCESS"}, {"name" : "set_null", "result" : "SUCCESS"}, {"name" : "set_next", "result" : "SUCCESS"}, {"name" : "get_next", "result" : "SUCCESS"}, {"name" : "ret_first", "result" : "SUCCESS"}, {"name" : "append", "result" : "SUCCESS"}
  ]},
  {"name": "ll_bak3.ss", "flags": "", "checks": [
    {"name" : "reverse", "result" : "SUCCESS"}, {"name" : "create_list", "result" : "SUCCESS"}, {"name" : "delete_val", "result" : "SUCCESS"}, {"name" : "delete", "result" : "SUCCESS"}, {"name" : "insert", "result" : "SUCCESS"}, {"name" : "get_next_next", "result" : "SUCCESS"}, {"name" : "set_null", "result" : "SUCCESS"}, {"name" : "set_next", "result" : "SUCCESS"}, {"name" : "get_next", "result" : "SUCCESS"}, {"name" : "ret_first", "result" : "SUCCESS"}, {"name" : "append", "result" : "SUCCESS"}
  ]},
  {"name": "ll_nolists.ss", "flags": "", "checks": [
    {"name" : "reverse", "result" : "SUCCESS"}, {"name" : "create_list", "result" : "SUCCESS"}, {"name" : "delete_val", "result" : "SUCCESS"}, {"name" : "delete", "result" : "SUCCESS"}, {"name" : "insert", "result" : "SUCCESS"}, {"name" : "get_next_next", "result" : "SUCCESS"}, {"name" : "set_null", "result" : "SUCCESS"}, {"name" : "set_next", "result" : "SUCCESS"}, {"name" : "get_next", "result" : "SUCCESS"}, {"name" : "ret_first", "result" : "SUCCESS"}, {"name" : "append", "result" : "SUCCESS"}
  ]},
  {"name": "ll_test1.ss", "flags": "", "checks": [
    {"name" : "reverse", "result" : "SUCCESS"}
  ]},
  {"name": "ll_test2.ss", "flags": "", "checks": [
    {"name" : "delete", "result" : "SUCCESS"}
  ]},
  {"name": "ll_test4.ss", "flags": "", "checks": [
    {"name" : "test", "result" : "SUCCESS"}
  ]},
  {"name": "ll_test5.ss", "flags": "", "checks": [
    {"name" : "delete_val", "result" : "SUCCESS"}
  ]},
  {"name": "lrev-bug.ss", "flags": "", "checks": [
    {"name" : "lrev", "result" : "SUCCESS"}
  ]},
  {"name": "lrev.ss", "flags": "", "checks": [
    {"name" : "lrev", "result" : "SUCCESS"}
  ]},
  {"name": "merge.ss", "flags": "", "checks": [
    {"name" : "merge", "result" : "SUCCESS"}
  ]},
  {"name": "merge1.ss", "flags": "", "checks": [
    {"name" : "merge", "result" : "SUCCESS"}
  ]},
  {"name": "merge2.ss", "flags": "", "checks": [
    {"name" : "merge", "result" : "SUCCESS"}
  ]},
  {"name": "merge3.ss", "flags": "", "checks": [
    {"name" : "merge", "result" : "SUCCESS"}
  ]},
  {"name": "mk_zero.ss", "flags": "", "checks": [
    {"name" : "mk_zero", "result" : "SUCCESS"}
  ]},
  {"name": "perm.ss", "flags": "", "checks": [
    {"name" : "append", "result" : "SUCCESS"}
  ]}
  ],
  "hip_barr": [
  {"name": "../tree_shares/thesis/video_ex1_th3.ss", "flags": "--eps --dis-field-imm --dis-precise-xpure -perm dperm", "checks": [
    {"name" : "th1_loop", "result" : "SUCCESS"}, {"name" : "th1", "result" : "SUCCESS"}, {"name" : "th2_loop", "result" : "SUCCESS"}, {"name" : "th2", "result" : "SUCCESS"}, {"name" : "th3_loop", "result" : "SUCCESS"}, {"name" : "th3", "result" : "SUCCESS"}
  ]},
  {"name": "../tree_shares/thesis/SIMD_ex1_v2_th3.ss", "flags": "--eps --dis-field-imm --dis-precise-xpure -perm dperm", "checks": [
    {"name" : "controll", "result" : "SUCCESS"}, {"name" : "control", "result" : "SUCCESS"}, {"name" : "thl1", "result" : "SUCCESS"}, {"name" : "th1", "result" : "SUCCESS"}, {"name" : "thl2", "result" : "SUCCESS"}, {"name" : "th2", "result" : "SUCCESS"}, {"name" : "thl3", "result" : "SUCCESS"}, {"name" : "th3", "result" : "SUCCESS"}, {"name" : "thl4", "result" : "SUCCESS"}, {"name" : "th4", "result" : "SUCCESS"}
  ]},
  {"name": "../tree_shares/thesis/SIMD_ex1_th1.ss", "flags": "--eps --dis-field-imm --dis-precise-xpure -perm dperm", "checks": [
    {"name" : "controll", "result" : "SUCCESS"}, {"name" : "control", "result" : "SUCCESS"}, {"name" : "thl1", "result" : "SUCCESS"}, {"name" : "th1", "result" : "SUCCESS"}, {"name" : "thl2", "result" : "SUCCESS"}, {"name" : "th2", "result" : "SUCCESS"}
  ]},
  {"name": "../tree_shares/thesis/PIPE_ex1_th5.ss", "flags": "--eps --dis-field-imm --dis-precise-xpure -perm dperm", "checks": [
    {"name" : "controll", "result" : "SUCCESS"}, {"name" : "thl5", "result" : "SUCCESS"}, {"name" : "thl1", "result" : "SUCCESS"}, {"name" : "thl2", "result" : "SUCCESS"}, {"name" : "thl3", "result" : "SUCCESS"}, {"name" : "thl4", "result" : "SUCCESS"}
  ]},
  {"name": "../tree_shares/thesis/MIXED_ex1_th4.ss", "flags": "--eps --dis-field-imm --dis-precise-xpure -perm dperm", "checks": [
    {"name" : "ctl12", "result" : "SUCCESS"}, {"name" : "ctl11", "result" : "SUCCESS"}, {"name" : "starterc", "result" : "SUCCESS"}, {"name" : "thl12", "result" : "SUCCESS"}, {"name" : "thl22", "result" : "SUCCESS"}, {"name" : "thl21", "result" : "SUCCESS"}, {"name" : "thl11", "result" : "SUCCESS"}, {"name" : "startert1", "result" : "SUCCESS"}, {"name" : "startert2", "result" : "SUCCESS"}, {"name" : "thl32", "result" : "SUCCESS"}, {"name" : "thl31", "result" : "SUCCESS"}, {"name" : "startert3", "result" : "SUCCESS"}, {"name" : "thl42", "result" : "SUCCESS"}, {"name" : "thl41", "result" : "SUCCESS"}, {"name" : "startert4", "result" : "SUCCESS"}
  ]},
  {"name": "../tree_shares/thesis/MISD_ex2_th5.ss", "flags": "--eps --dis-field-imm --dis-precise-xpure -perm dperm", "checks": [
    {"name" : "controll", "result" : "SUCCESS"}, {"name" : "control", "result" : "SUCCESS"}, {"name" : "thl", "result" : "SUCCESS"}, {"name" : "th", "result" : "SUCCESS"}, {"name" : "thl2", "result" : "SUCCESS"}, {"name" : "th2", "result" : "SUCCESS"}, {"name" : "thl3", "result" : "SUCCESS"}, {"name" : "th3", "result" : "SUCCESS"}, {"name" : "thl4", "result" : "SUCCESS"}, {"name" : "th4", "result" : "SUCCESS"}, {"name" : "thl5", "result" : "SUCCESS"}, {"name" : "th5", "result" : "SUCCESS"}
  ]},
  {"name": "../tree_shares/thesis/MISD_ex1_th5.ss", "flags": "--eps --dis-field-imm --dis-precise-xpure -perm dperm", "checks": [
    {"name" : "controll", "result" : "SUCCESS"}, {"name" : "control", "result" : "SUCCESS"}, {"name" : "thl", "result" : "SUCCESS"}, {"name" : "th", "result" : "SUCCESS"}
  ]},
  {"name": "../tree_shares/thesis/barrier-weak.ss", "flags": "--eps --dis-field-imm --dis-precise-xpure -perm dperm", "checks": [
    {"name" : "th1_loop", "result" : "SUCCESS"}, {"name" : "th1", "result" : "SUCCESS"}, {"name" : "th2_loop", "result" : "SUCCESS"}, {"name" : "th2", "result" : "SUCCESS"}
  ]},
  {"name": "../tree_shares/thesis/barrier-strong.ss", "flags": "--eps --dis-field-imm --dis-precise-xpure -perm dperm", "checks": [
    {"name" : "th1_loop", "result" : "SUCCESS"}, {"name" : "th1", "result" : "SUCCESS"}, {"name" : "th2_loop", "result" : "SUCCESS"}, {"name" : "th2", "result" : "SUCCESS"}
  ]},
  {"name": "../tree_shares/thesis/barrier-paper.ss", "flags": "--eps --dis-field-imm --dis-precise-xpure -perm dperm", "checks": [
    {"name" : "th1_loop", "result" : "SUCCESS"}, {"name" : "th1", "result" : "SUCCESS"}, {"name" : "th2_loop", "result" : "SUCCESS"}, {"name" : "th2", "result" : "SUCCESS"}
  ]}
  ],
  "sa": [
  {"name": "ll-trav.c", "flags": "-validate infer/output/sa/ll-trav.cp", "checks": [
    {"name" : "foo", "result" : "SUCCESS"}
  ]},
  {"name": "ll-trav-1.c", "flags": "-validate infer/output/sa/ll-trav-1.cp", "checks": [
    {"name" : "foo", "result" : "SUCCESS"}
  ]},
  {"name": "ll-delete.ss", "flags": "-validate infer/output/sa/ll-delete.cp", "checks": [
    {"name" : "whiledel", "result" : "SUCCESS"}
  ]},
  {"name": "zip_paper_eq.c", "flags": "-validate infer/output/sa/zip_paper_eq.cp", "checks": [
    {"name" : "zip", "result" : "SUCCESS"}
  ]},
  {"name": "check-sll-head.c", "flags": "-validate infer/output/sa/check-sll-head.cp --pred-dis-seg", "checks": [
    {"name" : "foo", "result" : "SUCCESS"}
  ]},
  {"name": "skip2-list.c", "flags": "-validate infer/output/sa/skip2-list.cp --pred-en-equiv -tp z3", "checks": [
    {"name" : "skip0", "result" : "SUCCESS"}, {"name" : "skip1", "result" : "SUCCESS"}
  ]},
  {"name": "skip3-list.c", "flags": "-validate infer/output/sa/skip3-list.cp --pred-en-equiv -tp z3", "checks": [
    {"name" : "skip0", "result" : "SUCCESS"}, {"name" : "skip1", "result" : "SUCCESS"}, {"name" : "skip2", "result" : "SUCCESS"}
  ]},
  {"name": "check-sorted.c", "flags": "-validate infer/output/sa/check-sorted.cp --sa-en-pure-field -tp z3", "checks": [
    {"name" : "check_sorted", "result" : "SUCCESS"}
  ]},
  {"name": "sll-insertsort.c", "flags": "-validate infer/output/sa/sll-insertsort.cp -tp z3", "checks": [
    {"name" : "insert", "result" : "SUCCESS"}
  ]},
  {"name": "cll.c", "flags": "-validate infer/output/sa/cll.cp -tp z3  --pred-en-dangling", "checks": [
    {"name" : "count_rest", "result" : "SUCCESS"}
  ]},
  {"name": "check-cll.c", "flags": "-validate infer/output/sa/check-cll.cp -tp z3  --pred-en-dangling", "checks": [
    {"name" : "check_csll", "result" : "SUCCESS"}
  ]},
  {"name": "sll-01-slls.c", "flags": "-validate infer/output/sa/sll-01-slls.cp -tp z3  --pred-en-dangling", "checks": [
    {"name" : "helper", "result" : "SUCCESS"}
  ]},
  {"name": "sll-dll.c", "flags": "-validate infer/output/sa/sll-dll.cp -tp z3  --pred-en-equiv", "checks": [
    {"name" : "paper_fix", "result" : "SUCCESS"}
  ]},
  {"name": "check-dll.c", "flags": "-validate infer/output/sa/check-dll.cp -tp z3 ", "checks": [
    {"name" : "check_dll", "result" : "SUCCESS"}
  ]},
  {"name": "check-cllclls.c", "flags": "-validate infer/output/sa/check-cllclls.cp -tp z3 --pred-en-equiv", "checks": [
    {"name" : "check_csll", "result" : "SUCCESS"}, {"name" : "check_csll_outer", "result" : "SUCCESS"}
  ]},
  {"name": "check-cdll5clls.c", "flags": "-validate infer/output/sa/check-cdll5clls.cp -tp z3 --pred-en-equiv", "checks": [
    {"name" : "check_csll", "result" : "SUCCESS"}, {"name" : "check_cdll_out1", "result" : "SUCCESS"}
  ]},
  {"name": "check-cdllcllsx2.c", "flags": "-validate infer/output/sa/check-cdllcllsx2.cp -tp z3 --pred-en-equiv", "checks": [
    {"name" : "check_csll", "result" : "SUCCESS"}, {"name" : "check_csll_outer1", "result" : "SUCCESS"}, {"name" : "check_cdll_outer2", "result" : "SUCCESS"}
  ]},
  {"name": "dll-append_paper.c", "flags": "-validate infer/output/sa/dll-append_paper.cp -tp z3 ", "checks": [
    {"name" : "dll_append", "result" : "SUCCESS"}
  ]},
  {"name": "bt-search-2.c", "flags": "-validate infer/output/sa/bt-search-2.cp -tp z3 --pred-unify-post", "checks": [
    {"name" : "search", "result" : "SUCCESS"}
  ]},
  {"name": "tll.c", "flags": "-validate infer/output/sa/tll.cp -tp z3 --pred-en-equiv", "checks": [
    {"name" : "set_right", "result" : "SUCCESS"}
  ]},
  {"name": "rose-tree-1.c", "flags": "-validate infer/output/sa/rose-tree-1.cp -tp z3 --pred-en-equiv", "checks": [
    {"name" : "check_tree", "result" : "SUCCESS"}
  ]},
  {"name": "check-mcf.c", "flags": "-validate infer/output/sa/check-mcf.cp -tp z3 ", "checks": [
    {"name" : "check_child", "result" : "SUCCESS"}
  ]},
  {"name": "tll-parent.c", "flags": "-validate infer/output/sa/tll-parent.cp -tp z3 --pred-en-equiv", "checks": [
    {"name" : "set_right", "result" : "SUCCESS"}
  ]}
  ],
  "hip_threads": [
  {"name": "threads/motiv-example.ss", "flags": "--en-para --en-thrd-resource -tp redlog", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "thread1", "result" : "SUCCESS"}, {"name" : "thread2", "result" : "SUCCESS"}
  ]},
  {"name": "threads/motiv-example2.ss", "flags": "--en-para --en-thrd-resource -tp redlog", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "thread1", "result" : "SUCCESS"}, {"name" : "thread2", "result" : "SUCCESS"}
  ]},
  {"name": "threads/no-deadlock-nonlexical2.ss", "flags": "--en-para --en-thrd-resource -tp parahip --en-lsmu-infer", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "thread1", "result" : "SUCCESS"}, {"name" : "thread2", "result" : "SUCCESS"}
  ]},
  {"name": "threads/no-deadlock-nonlexical.ss", "flags": "--en-para --en-thrd-resource -tp parahip --en-lsmu-infer", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "thread1", "result" : "SUCCESS"}, {"name" : "thread2", "result" : "SUCCESS"}
  ]},
  {"name": "threads/forkjoin.ss", "flags": "--en-para -tp parahip --en-lsmu-infer --en-thrd-resource", "checks": [
    {"name" : "func", "result" : "SUCCESS"}, {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "threads/cell4.ss", "flags": "--en-para -tp parahip --en-lsmu-infer --en-thrd-resource", "checks": [
    {"name" : "inc", "result" : "SUCCESS"}, {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "threads/ls-bind.ss", "flags": "--en-para -tp parahip --en-lsmu-infer --en-thrd-resource", "checks": [
    {"name" : "func", "result" : "SUCCESS"}, {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "threads/no-deadlock1.ss", "flags": "--en-para -tp parahip --en-lsmu-infer --en-thrd-resource", "checks": [
    {"name" : "func", "result" : "SUCCESS"}, {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "threads/no-deadlock2.ss", "flags": "--en-para -tp parahip --en-lsmu-infer --en-thrd-resource", "checks": [
    {"name" : "func", "result" : "SUCCESS"}, {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "threads/no-deadlock3.ss", "flags": "--en-para -tp parahip --en-lsmu-infer --en-thrd-resource", "checks": [
    {"name" : "func", "result" : "SUCCESS"}, {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "threads/deadlock1.ss", "flags": "--en-para -tp parahip --en-lsmu-infer --en-thrd-resource", "checks": [
    {"name" : "func", "result" : "SUCCESS"}, {"name" : "main", "result" : "FAIL"}
  ]},
  {"name": "threads/deadlock2.ss", "flags": "--en-para -tp parahip --en-lsmu-infer --en-thrd-resource", "checks": [
    {"name" : "func", "result" : "SUCCESS"}, {"name" : "main", "result" : "FAIL"}
  ]},
  {"name": "threads/deadlock3.ss", "flags": "--en-para -tp parahip --en-lsmu-infer --en-thrd-resource", "checks": [
    {"name" : "func", "result" : "SUCCESS"}, {"name" : "main", "result" : "FAIL"}
  ]},
  {"name": "threads/disj-no-deadlock1.ss", "flags": "--en-para -tp parahip --en-lsmu-infer --en-thrd-resource", "checks": [
    {"name" : "func", "result" : "SUCCESS"}, {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "threads/disj-no-deadlock2.ss", "flags": "--en-para -tp parahip --en-lsmu-infer --en-thrd-resource", "checks": [
    {"name" : "func", "result" : "SUCCESS"}, {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "threads/disj-no-deadlock3.ss", "flags": "--en-para -tp parahip --en-lsmu-infer --en-thrd-resource", "checks": [
    {"name" : "func", "result" : "SUCCESS"}, {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "threads/disj-deadlock.ss", "flags": "--en-para -tp parahip --en-lsmu-infer --en-thrd-resource", "checks": [
    {"name" : "func", "result" : "SUCCESS"}, {"name" : "main", "result" : "FAIL"}
  ]},
  {"name": "threads/ordered-locking.ss", "flags": "--en-para -tp parahip --en-lsmu-infer --en-thrd-resource", "checks": [
    {"name" : "func", "result" : "SUCCESS"}, {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "threads/unordered-locking.ss", "flags": "--en-para -tp parahip --en-lsmu-infer --en-thrd-resource", "checks": [
    {"name" : "func", "result" : "FAIL"}, {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "threads/oracle.ss", "flags": "--en-para -tp parahip --en-lsmu-infer --en-thrd-resource", "checks": [
    {"name" : "thread", "result" : "SUCCESS"}, {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "threads/owicki-gries.ss", "flags": "--en-para -tp parahip --en-lsmu-infer --en-thrd-resource", "checks": [
    {"name" : "incrementor2", "result" : "SUCCESS"}, {"name" : "incrementor1", "result" : "SUCCESS"}, {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "threads/fibonacci.ss", "flags": "--en-para -tp parahip --en-lsmu-infer --en-thrd-resource", "checks": [
    {"name" : "seq_fib", "result" : "SUCCESS"}, {"name" : "para_fib", "result" : "SUCCESS"}
  ]}
  ],
  "term": [
  {"name": "e1.ss", "flags": "", "checks": [
    {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "ex1.ss", "flags": "", "checks": [
    {"name" : "length", "result" : "SUCCESS"}, {"name" : "app2", "result" : "SUCCESS"}
  ]},
  {"name": "ex10.ss", "flags": "", "checks": [
    {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "ex11.ss", "flags": "", "checks": [
    {"name" : "bsearch", "result" : "SUCCESS"}
  ]},
  {"name": "ex15.ss", "flags": "", "checks": [
    {"name" : "loop", "result" : "SUCCESS"}, {"name" : "f", "result" : "SUCCESS"}
  ]},
  {"name": "ex16.ss", "flags": "", "checks": [
    {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "ex2.ss", "flags": "", "checks": [
    {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "ex3.ss", "flags": "", "checks": [
    {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "ex4.ss", "flags": "", "checks": [
    {"name" : "inc_loop", "result" : "SUCCESS"}
  ]},
  {"name": "ex5.ss", "flags": "", "checks": [
    {"name" : "foo", "result" : "SUCCESS"}
  ]},
  {"name": "ex6.ss", "flags": "", "checks": [
    {"name" : "Ack", "result" : "SUCCESS"}
  ]},
  {"name": "ex7.ss", "flags": "", "checks": [
    {"name" : "loop_aux1", "result" : "SUCCESS"}, {"name" : "loop_aux", "result" : "SUCCESS"}, {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "ex8.ss", "flags": "", "checks": [
    {"name" : "loop2", "result" : "SUCCESS"}, {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "ex9.ss", "flags": "", "checks": [
    {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "mutual.ss", "flags": "", "checks": [
    {"name" : "g", "result" : "SUCCESS"}, {"name" : "f", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/lit/cav08-1.ss", "flags": "", "checks": [
    {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/lit/cav08-2.ss", "flags": "", "checks": [
    {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/lit/cav08-3.ss", "flags": "", "checks": [
    {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/lit/cav08-4.ss", "flags": "", "checks": [
    {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/lit/cav08-5.ss", "flags": "", "checks": [
    {"name" : "loop", "result" : "SUCCESS"}, {"name" : "f", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/lit/cav08-6.ss", "flags": "", "checks": [
    {"name" : "gcd", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/lit/dijkstra76-1.ss", "flags": "", "checks": [
    {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/lit/dijkstra76-2.ss", "flags": "", "checks": [
    {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/lit/dijkstra76-3.ss", "flags": "", "checks": [
    {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/lit/pldi06-1.ss", "flags": "", "checks": [
    {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/lit/pldi06-2.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "loop_1", "result" : "SUCCESS"}, {"name" : "loop_2", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/lit/pldi06-3.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/lit/pldi06-4.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "loop", "result" : "SUCCESS"}, {"name" : "loop_aux", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/lit/pldi06-5.ss", "flags": "", "checks": [
    {"name" : "Ack", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/lit/popl07-1.ss", "flags": "", "checks": [
    {"name" : "loop_1", "result" : "SUCCESS"}, {"name" : "loop_2", "result" : "SUCCESS"}, {"name" : "loop_3", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/lit/popl07-2.ss", "flags": "", "checks": [
    {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/lit/sas05.ss", "flags": "", "checks": [
    {"name" : "loop_1", "result" : "SUCCESS"}, {"name" : "loop_2", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/lit/sas10-1.ss", "flags": "", "checks": [
    {"name" : "f", "result" : "SUCCESS"}, {"name" : "loop_1", "result" : "SUCCESS"}, {"name" : "loop_2", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/lit/sas10-2.ss", "flags": "", "checks": [
    {"name" : "foo", "result" : "SUCCESS"}, {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/lit/sas10-2a.ss", "flags": "", "checks": [
    {"name" : "foo", "result" : "SUCCESS"}, {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/lit/sas10-3.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "foo", "result" : "SUCCESS"}, {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/lit/vcc-1.ss", "flags": "", "checks": [
    {"name" : "f", "result" : "SUCCESS"}, {"name" : "g", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/lit/vmcai05-1a.ss", "flags": "", "checks": [
    {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/lit/vmcai05-1b.ss", "flags": "-tp redlog", "checks": [
    {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/key/AlternatingIncr.ss", "flags": "", "checks": [
    {"name" : "increase", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/key/AlternDiv-invalid-1.ss", "flags": "-tp redlog", "checks": [
    {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/key/AlternDiv.ss", "flags": "-tp redlog", "checks": [
    {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/key/AlternDivWidening.ss", "flags": "-tp redlog", "checks": [
    {"name" : "loop", "result" : "SUCCESS"}, {"name" : "loop_aux", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/key/AlternDivWide.ss", "flags": "", "checks": [
    {"name" : "loop", "result" : "SUCCESS"}, {"name" : "loop_aux", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/key/AlternKonv.ss", "flags": "", "checks": [
    {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/key/Collatz.ss", "flags": "", "checks": [
    {"name" : "collatz", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/key/ComplInterv2.ss", "flags": "", "checks": [
    {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/key/ComplInterv3.ss", "flags": "", "checks": [
    {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/key/ComplInterv.ss", "flags": "-tp z3", "checks": [
    {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/key/ComplxStruc-may.ss", "flags": "", "checks": [
    {"name" : "complxStruc", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/key/ComplxStruc2.ss", "flags": "", "checks": [
    {"name" : "loop", "result" : "SUCCESS"}, {"name" : "complxStruc", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/key/ConvLower.ss", "flags": "", "checks": [
    {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/key/Cousot.ss", "flags": "", "checks": [
    {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/key/DoubleNeg.ss", "flags": "-tp redlog", "checks": [
    {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/key/Even.ss", "flags": "", "checks": [
    {"name" : "even", "result" : "SUCCESS"}, {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/key/Ex01.ss", "flags": "", "checks": [
    {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/key/Ex02.ss", "flags": "", "checks": [
    {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/key/Ex03.ss", "flags": "", "checks": [
    {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/key/Ex04.ss", "flags": "", "checks": [
    {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/key/Ex05.ss", "flags": "", "checks": [
    {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/key/Ex06.ss", "flags": "", "checks": [
    {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/key/Ex07.ss", "flags": "", "checks": [
    {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/key/Ex08.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/key/Ex09.ss", "flags": "", "checks": [
    {"name" : "half", "result" : "SUCCESS"}, {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/key/Fibonacci.ss", "flags": "", "checks": [
    {"name" : "fib", "result" : "SUCCESS"}, {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/key/Flip2.ss", "flags": "", "checks": [
    {"name" : "flip", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/key/Flip3.ss", "flags": "", "checks": [
    {"name" : "flip", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/key/Flip.ss", "flags": "", "checks": [
    {"name" : "flip", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/key/Gauss.ss", "flags": "", "checks": [
    {"name" : "sum", "result" : "SUCCESS"}, {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/key/Gcd-may.ss", "flags": "", "checks": [
    {"name" : "gcd", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/key/Lcm.ss", "flags": "", "checks": [
    {"name" : "lcm", "result" : "SUCCESS"}, {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/key/Marbie1.ss", "flags": "", "checks": [
    {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/key/Marbie2.ss", "flags": "", "checks": [
    {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/key/Middle.ss", "flags": "", "checks": [
    {"name" : "middle", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/key/MirrorIntervSim.ss", "flags": "", "checks": [
    {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/key/MirrorInterv.ss", "flags": "", "checks": [
    {"name" : "mirrorInterv", "result" : "SUCCESS"}, {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/key/ModuloLower.ss", "flags": "", "checks": [
    {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/key/ModuloUp.ss", "flags": "-tp redlog", "checks": [
    {"name" : "up", "result" : "SUCCESS"}, {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/key/Narrowing.ss", "flags": "", "checks": [
    {"name" : "narrowing", "result" : "SUCCESS"}, {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/key/NarrowKonv.ss", "flags": "", "checks": [
    {"name" : "narrowKonv", "result" : "SUCCESS"}, {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/key/NegPos.ss", "flags": "-tp redlog", "checks": [
    {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/key/Plait-may.ss", "flags": "", "checks": [
    {"name" : "plait", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/key/Sunset.ss", "flags": "", "checks": [
    {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/key/TrueDiv.ss", "flags": "", "checks": [
    {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/key/TwoFloatInterv.ss", "flags": "", "checks": [
    {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/key/UpAndDownIneq.ss", "flags": "", "checks": [
    {"name" : "upAndDown", "result" : "SUCCESS"}, {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/key/UpAndDown.ss", "flags": "", "checks": [
    {"name" : "upAndDown", "result" : "SUCCESS"}, {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/key/WhileBreak.ss", "flags": "", "checks": [
    {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/key/WhileDecr.ss", "flags": "", "checks": [
    {"name" : "decrease", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/key/WhileIncrPart.ss", "flags": "", "checks": [
    {"name" : "increase", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/key/WhileIncr.ss", "flags": "", "checks": [
    {"name" : "increase", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/key/WhileNestedOffset.ss", "flags": "", "checks": [
    {"name" : "increase", "result" : "SUCCESS"}, {"name" : "loop_1", "result" : "SUCCESS"}, {"name" : "loop_2", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/key/WhileNested.ss", "flags": "", "checks": [
    {"name" : "increase", "result" : "SUCCESS"}, {"name" : "loop_1", "result" : "SUCCESS"}, {"name" : "loop_2", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/key/WhilePart.ss", "flags": "", "checks": [
    {"name" : "increase", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/key/WhileSingle.ss", "flags": "", "checks": [
    {"name" : "increase", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/key/WhileSum.ss", "flags": "", "checks": [
    {"name" : "increase", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/key/WhileTrue.ss", "flags": "", "checks": [
    {"name" : "endless", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Aprove_09/DivMinus2.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "div", "result" : "SUCCESS"}, {"name" : "minus", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Aprove_09/DivMinus.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "div", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Aprove_09/DivWithoutMinus.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Aprove_09/Duplicate.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "round", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Aprove_09/GCD2.ss", "flags": "-tp redlog", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "gcd", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Aprove_09/GCD3.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "gcd", "result" : "SUCCESS"}, {"name" : "mod", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Aprove_09/GCD4.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "gcd", "result" : "SUCCESS"}, {"name" : "mod", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Aprove_09/GCD5.ss", "flags": "-tp redlog", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "gcd", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Aprove_09/GCD.ss", "flags": "-tp redlog", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "gcd", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Aprove_09/LogAG.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "half", "result" : "SUCCESS"}, {"name" : "log", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Aprove_09/LogBuiltIn.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "log", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Aprove_09/LogIterative.ss", "flags": "-tp redlog", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "log", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Aprove_09/LogMult.ss", "flags": "-tp redlog", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "log", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Aprove_09/Log.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "half", "result" : "SUCCESS"}, {"name" : "log", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Aprove_09/McCarthyIterative-may.ss", "flags": "", "checks": [
    {"name" : "mcCarthy", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Aprove_09/McCarthyRec.ss", "flags": "", "checks": [
    {"name" : "mcCarthy", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Aprove_09/MinusBuiltIn.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Aprove_09/MinusMin.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "mn", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Aprove_09/MinusUserDefined.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "gt", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Aprove_09/Mod.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "mod", "result" : "SUCCESS"}, {"name" : "minus", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Aprove_09/PlusSwap.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Aprove_09/Round3.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/AProVE_10/AG313.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "quot", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/AProVE_11_iterative/RetValRec.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "ret", "result" : "SUCCESS"}, {"name" : "test", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/AProVE_11_iterative/RetVal.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "ret", "result" : "SUCCESS"}, {"name" : "test", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/AProVE11NO/LoopingNonTerm.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/AProVE11NO/NonPeriodicNonTerm2.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/BOG_RTA_11/Avg.ss", "flags": "", "checks": [
    {"name" : "avg", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/BOG_RTA_11/EqUserDefRec.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "eq", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/BOG_RTA_11/Fibonacci.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "fib", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/BOG_RTA_11/LeUserDefRec.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "le", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/BOG_RTA_11/LogRecursive.ss", "flags": "-tp redlog", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "log", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/BOG_RTA_11/Nest.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "nest", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/BOG_RTA_11/TerminatiorRec01.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "f", "result" : "SUCCESS"}, {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/BOG_RTA_11/TerminatiorRec02.ss", "flags": "-tp redlog", "checks": [
    {"name" : "fact", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/BOG_RTA_11/TerminatiorRec03.ss", "flags": "", "checks": [
    {"name" : "f", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/BOG_RTA_11/TerminatiorRec04-modified.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "f", "result" : "SUCCESS"}, {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/BOG_RTA_11/TerminatiorRec04.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "f", "result" : "SUCCESS"}, {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/BOG_RTA_11/TimesPlusUserDef.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "times", "result" : "SUCCESS"}, {"name" : "plus", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/BOG_RTA_11/TwoWay.ss", "flags": "-tp redlog", "checks": [
    {"name" : "twoWay", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Costa_Julia_09/Break.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Costa_Julia_09/Continue1.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Costa_Julia_09/Continue.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Costa_Julia_09/costa09-example_1.ss", "flags": "", "checks": [
    {"name" : "incr", "result" : "SUCCESS"}, {"name" : "add", "result" : "SUCCESS"}, {"name" : "incr2", "result" : "SUCCESS"}, {"name" : "add2", "result" : "SUCCESS"}, {"name" : "incr3", "result" : "SUCCESS"}, {"name" : "add3", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Costa_Julia_09/costa09-example_2.ss", "flags": "-tp redlog", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "divBy", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Costa_Julia_09/costa09-example_3.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "m", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Costa_Julia_09/Exc1-exc.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "rec_f", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Costa_Julia_09/Exc2-exc.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "rec_f", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Costa_Julia_09/Exc3-exc.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "rec_f", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Costa_Julia_09/Exc4-exc.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "rec_f", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Costa_Julia_09/Exc5-exc.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "rec_f", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Costa_Julia_09/Exc-exc.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "rec_f", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Costa_Julia_09/Exc1-no.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Costa_Julia_09/Exc2-no.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Costa_Julia_09/Exc3-no.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Costa_Julia_09/Exc4-no.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Costa_Julia_09/Exc5-no.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Costa_Julia_09/Exc-no.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Costa_Julia_09/Loop1.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Costa_Julia_09/Nested.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Costa_Julia_09/Sequence.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Costa_Julia_09/TestJulia4.ss", "flags": "-tp redlog", "checks": [
    {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Costa_Julia_09-recursive/Ackermann.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "ack", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Costa_Julia_09-recursive/Double-1.ss", "flags": "-tp redlog", "checks": [
    {"name" : "test", "result" : "SUCCESS"}, {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Costa_Julia_09-recursive/Double2-1.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "test", "result" : "SUCCESS"}, {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Costa_Julia_09-recursive/Double2.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "test", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Costa_Julia_09-recursive/Double3-1.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "test", "result" : "SUCCESS"}, {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Costa_Julia_09-recursive/Double3.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "test", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Costa_Julia_09-recursive/Double.ss", "flags": "-tp redlog", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "test", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Costa_Julia_09-recursive/Factorial.ss", "flags": "-tp redlog", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "fact", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Costa_Julia_09-recursive/FactSumList.ss", "flags": "-tp redlog", "checks": [
    {"name" : "doSum", "result" : "SUCCESS"}, {"name" : "fact", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Costa_Julia_09-recursive/FactSum.ss", "flags": "-tp redlog", "checks": [
    {"name" : "doSum", "result" : "SUCCESS"}, {"name" : "fact", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Costa_Julia_09-recursive/Hanoi.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "sol", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Julia_10_Iterative/NonPeriodic.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Julia_10_Iterative/Test11.ss", "flags": "-tp redlog", "checks": [
    {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Julia_10_Iterative/Test2.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "iter", "result" : "SUCCESS"}, {"name" : "add", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Julia_10_Recursive/AckR.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "ack", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Julia_10_Recursive/FibSLR.ss", "flags": "-tp redlog", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "fib", "result" : "SUCCESS"}, {"name" : "doSum", "result" : "SUCCESS"}, {"name" : "create", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Julia_10_Recursive/HanR.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "sol", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Julia_10_Recursive/Power.ss", "flags": "-tp redlog", "checks": [
    {"name" : "power", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Julia_10_Recursive/EvenOdd.ss", "flags": "", "checks": [
    {"name" : "even", "result" : "SUCCESS"}, {"name" : "odd", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Julia_10_Recursive/Recursions.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "rec0", "result" : "SUCCESS"}, {"name" : "rec1", "result" : "SUCCESS"}, {"name" : "rec2", "result" : "SUCCESS"}, {"name" : "rec3", "result" : "SUCCESS"}, {"name" : "rec4", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Julia_10_Recursive/Test10.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "rec", "result" : "SUCCESS"}, {"name" : "test", "result" : "SUCCESS"}, {"name" : "descend", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Julia_10_Recursive/Test12.ss", "flags": "-tp redlog", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "rec", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Julia_10_Recursive/Test1.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "rec", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Julia_11_iterative/ChooseLife.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Julia_11_iterative/Choose.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Julia_11_iterative/Continue.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Julia_11_iterative/Loop.ss", "flags": "-tp redlog", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "test", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Julia_11_iterative/NO_00.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Julia_11_iterative/NO_01.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Julia_11_iterative/NO_02.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Julia_11_iterative/NO_03.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Julia_11_iterative/NO_04.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "for_1", "result" : "SUCCESS"}, {"name" : "for_2", "result" : "SUCCESS"}, {"name" : "for_3", "result" : "SUCCESS"}, {"name" : "for_4", "result" : "SUCCESS"}, {"name" : "for_5", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Julia_11_iterative/NO_05.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Julia_11_iterative/NO_06.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Julia_11_iterative/NO_10.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Julia_11_iterative/NO_11.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Julia_11_iterative/NO_12.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Julia_11_iterative/NO_20.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Julia_11_iterative/NO_21.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Julia_11_iterative/NO_22.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Julia_11_iterative/NO_23.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Julia_11_iterative/NO_24.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Julia_11_iterative/Parts.ss", "flags": "", "checks": [
    {"name" : "parts", "result" : "SUCCESS"}, {"name" : "main", "result" : "SUCCESS"}, {"name" : "for_1", "result" : "SUCCESS"}, {"name" : "loop_1", "result" : "SUCCESS"}, {"name" : "for_2", "result" : "SUCCESS"}, {"name" : "loop_2", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/Julia_11_iterative/Swingers.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/pasta/PastaA10.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/pasta/PastaA1.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "loop_1", "result" : "SUCCESS"}, {"name" : "loop_2", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/pasta/PastaA4.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/pasta/PastaA5.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/pasta/PastaA6.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/pasta/PastaA7.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/pasta/PastaA8.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/pasta/PastaA9.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/pasta/PastaB10.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/pasta/PastaB11.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/pasta/PastaB12.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/pasta/PastaB13.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/pasta/PastaB14.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "loop_1", "result" : "SUCCESS"}, {"name" : "loop_2", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/pasta/PastaB15.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "loop_1", "result" : "SUCCESS"}, {"name" : "loop_2", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/pasta/PastaB16-loop.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "loop_1", "result" : "SUCCESS"}, {"name" : "loop_2", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/pasta/PastaB16.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "loop_1", "result" : "SUCCESS"}, {"name" : "loop_2", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/pasta/PastaB17.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "loop_1", "result" : "SUCCESS"}, {"name" : "loop_2", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/pasta/PastaB18.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "loop", "result" : "SUCCESS"}, {"name" : "decrease", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/pasta/PastaB1.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/pasta/PastaB2.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/pasta/PastaB3.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/pasta/PastaB4.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/pasta/PastaB4-loop.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/pasta/PastaB5.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/pasta/PastaB6.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/pasta/PastaB7.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/pasta/PastaB8.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/pasta/PastaC10-while.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/pasta/PastaC11.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/pasta/PastaC11-while.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/pasta/PastaC1.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "loop_1", "result" : "SUCCESS"}, {"name" : "loop_2", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/pasta/PastaC1-while.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/pasta/PastaC2-while.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/pasta/PastaC3.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/pasta/PastaC3-while.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/pasta/PastaC4-while.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/pasta/PastaC5-while.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/pasta/PastaC7-simpl-1.ss", "flags": "", "checks": [
    {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/pasta/PastaC7-simpl-2.ss", "flags": "", "checks": [
    {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/pasta/PastaC7-simpl.ss", "flags": "", "checks": [
    {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/pasta/PastaC7.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "loop", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/pasta/PastaC7-while.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/pasta/PastaC8-while.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "benchs/aprove/pasta/PastaC9-while.ss", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}
  ]}
  ],
  "hip_tr": [
  {"name": "trees.ss", "flags": "insert", "checks": [
    {"name" : "", "result" : ""}
  ]}
  ],
  "bags": [
  {"name": "avl-all-1.ss", "flags": "", "checks": [
    {"name" : "remove_min", "result" : "SUCCESS"}, {"name" : "rotate_double_right", "result" : "SUCCESS"}, {"name" : "rotate_double_left", "result" : "SUCCESS"}, {"name" : "get_max", "result" : "SUCCESS"}, {"name" : "rotate_right", "result" : "SUCCESS"}, {"name" : "rotate_left", "result" : "SUCCESS"}, {"name" : "height", "result" : "SUCCESS"}, {"name" : "", "result" : ""}
  ]},
  {"name": "avl-all.ss", "flags": "", "checks": [
    {"name" : "delete", "result" : "SUCCESS"}, {"name" : "delete_top", "result" : "SUCCESS"}, {"name" : "remove_min", "result" : "SUCCESS"}, {"name" : "remove_max_add", "result" : "SUCCESS"}, {"name" : "remove_min_add", "result" : "SUCCESS"}, {"name" : "insert", "result" : "SUCCESS"}, {"name" : "rotate_double_left", "result" : "SUCCESS"}, {"name" : "get_max", "result" : "SUCCESS"}, {"name" : "rotate_right", "result" : "SUCCESS"}, {"name" : "rotate_left", "result" : "SUCCESS"}, {"name" : "height", "result" : "SUCCESS"}
  ]},
  {"name": "avl-modular-2.ss", "flags": "", "checks": [
    {"name" : "delete", "result" : "SUCCESS"}, {"name" : "delete_top", "result" : "SUCCESS"}, {"name" : "remove_min", "result" : "SUCCESS"}, {"name" : "remove_max_add", "result" : "SUCCESS"}, {"name" : "remove_min_add", "result" : "SUCCESS"}, {"name" : "insert", "result" : "SUCCESS"}, {"name" : "rotate_double_right", "result" : "SUCCESS"}, {"name" : "rotate_double_left", "result" : "SUCCESS"}, {"name" : "get_max", "result" : "SUCCESS"}, {"name" : "rotate_right", "result" : "SUCCESS"}, {"name" : "rotate_left", "result" : "SUCCESS"}, {"name" : "diff_h_by_2", "result" : "SUCCESS"}, {"name" : "diff_h_by_1", "result" : "SUCCESS"}, {"name" : "eq_h", "result" : "SUCCESS"}, {"name" : "less_h", "result" : "SUCCESS"}, {"name" : "get_max_height_add1", "result" : "SUCCESS"}
  ]},
  {"name": "avl-modular-3.ss", "flags": "", "checks": [
    {"name" : "delete", "result" : "SUCCESS"}, {"name" : "delete_top", "result" : "SUCCESS"}, {"name" : "remove_min", "result" : "SUCCESS"}, {"name" : "remove_max_add", "result" : "SUCCESS"}, {"name" : "remove_min_add", "result" : "SUCCESS"}, {"name" : "insert", "result" : "SUCCESS"}, {"name" : "rotate_double_left", "result" : "SUCCESS"}, {"name" : "get_max", "result" : "SUCCESS"}, {"name" : "rotate_right", "result" : "SUCCESS"}, {"name" : "rotate_left", "result" : "SUCCESS"}, {"name" : "height", "result" : "SUCCESS"}
  ]},
  {"name": "avl-modular-2.ss", "flags": "", "checks": [
    {"name" : "delete", "result" : "SUCCESS"}, {"name" : "delete_top", "result" : "SUCCESS"}, {"name" : "remove_min", "result" : "SUCCESS"}, {"name" : "remove_max_add", "result" : "SUCCESS"}, {"name" : "remove_min_add", "result" : "SUCCESS"}, {"name" : "insert", "result" : "SUCCESS"}, {"name" : "rotate_double_right", "result" : "SUCCESS"}, {"name" : "rotate_double_left", "result" : "SUCCESS"}, {"name" : "get_max", "result" : "SUCCESS"}, {"name" : "rotate_right", "result" : "SUCCESS"}, {"name" : "rotate_left", "result" : "SUCCESS"}, {"name" : "diff_h_by_2", "result" : "SUCCESS"}, {"name" : "diff_h_by_1", "result" : "SUCCESS"}, {"name" : "eq_h", "result" : "SUCCESS"}, {"name" : "less_h", "result" : "SUCCESS"}, {"name" : "get_max_height_add1", "result" : "SUCCESS"}, {"name" : "height", "result" : "SUCCESS"}
  ]},
  {"name": "avl-modular-hei.ss", "flags": "", "checks": [
    {"name" : "delete", "result" : "SUCCESS"}, {"name" : "delete_top", "result" : "SUCCESS"}, {"name" : "remove_min", "result" : "SUCCESS"}, {"name" : "remove_max_add", "result" : "SUCCESS"}, {"name" : "remove_min_add", "result" : "SUCCESS"}, {"name" : "insert", "result" : "SUCCESS"}, {"name" : "rotate_double_right", "result" : "SUCCESS"}, {"name" : "rotate_double_left", "result" : "SUCCESS"}, {"name" : "get_max", "result" : "SUCCESS"}, {"name" : "rotate_right", "result" : "SUCCESS"}, {"name" : "rotate_left", "result" : "SUCCESS"}, {"name" : "rotate_right2", "result" : "SUCCESS"}, {"name" : "rotate_left2", "result" : "SUCCESS"}, {"name" : "height", "result" : "SUCCESS"}
  ]},
  {"name": "avl-modular-new3.ss", "flags": "", "checks": [
    {"name" : "delete", "result" : "SUCCESS"}, {"name" : "delete_top", "result" : "SUCCESS"}, {"name" : "remove_min", "result" : "SUCCESS"}, {"name" : "remove_max_add", "result" : "SUCCESS"}, {"name" : "remove_min_add", "result" : "SUCCESS"}, {"name" : "insert", "result" : "SUCCESS"}, {"name" : "is_mem", "result" : "SUCCESS"}, {"name" : "rotate_double_right", "result" : "SUCCESS"}, {"name" : "rotate_double_left", "result" : "SUCCESS"}, {"name" : "get_max", "result" : "SUCCESS"}, {"name" : "rotate_right", "result" : "SUCCESS"}, {"name" : "rotate_left", "result" : "SUCCESS"}, {"name" : "diff_h_by_2", "result" : "SUCCESS"}, {"name" : "diff_h_by_1", "result" : "SUCCESS"}, {"name" : "eq_h", "result" : "SUCCESS"}, {"name" : "less_h", "result" : "SUCCESS"}, {"name" : "get_max_height_add1", "result" : "SUCCESS"}, {"name" : "height", "result" : "SUCCESS"}
  ]},
  {"name": "avl-modular-set.ss", "flags": "", "checks": [
    {"name" : "delete", "result" : "SUCCESS"}, {"name" : "delete_top", "result" : "SUCCESS"}, {"name" : "remove_min", "result" : "SUCCESS"}
  ]},
  {"name": "avl-modular-siz.ss", "flags": "", "checks": [
    {"name" : "delete", "result" : "SUCCESS"}, {"name" : "delete_top", "result" : "SUCCESS"}, {"name" : "remove_min", "result" : "SUCCESS"}
  ]},
  {"name": "avl-modular.ss", "flags": "", "checks": [
    {"name" : "delete", "result" : "SUCCESS"}, {"name" : "delete_top", "result" : "SUCCESS"}, {"name" : "remove_min", "result" : "SUCCESS"}, {"name" : "remove_max_add", "result" : "SUCCESS"}, {"name" : "remove_min_add", "result" : "SUCCESS"}, {"name" : "insert", "result" : "SUCCESS"}, {"name" : "rotate_double_right", "result" : "SUCCESS"}, {"name" : "rotate_double_left", "result" : "SUCCESS"}, {"name" : "get_max", "result" : "SUCCESS"}, {"name" : "rotate_right", "result" : "SUCCESS"}, {"name" : "rotate_left", "result" : "SUCCESS"}, {"name" : "height", "result" : "SUCCESS"}
  ]},
  {"name": "avl.scp.ss", "flags": "", "checks": [
    {"name" : "delete", "result" : "SUCCESS"}, {"name" : "remove_min", "result" : "SUCCESS"}, {"name" : "insert_inline1", "result" : "SUCCESS"}, {"name" : "insert_inline", "result" : "SUCCESS"}, {"name" : "insert1", "result" : "SUCCESS"}, {"name" : "insert", "result" : "SUCCESS"}, {"name" : "build_avl2", "result" : "SUCCESS"}, {"name" : "build_avl1", "result" : "SUCCESS"}, {"name" : "rotate_double_right1", "result" : "SUCCESS"}, {"name" : "rotate_double_right", "result" : "SUCCESS"}, {"name" : "rotate_double_left1", "result" : "SUCCESS"}, {"name" : "rotate_double_left", "result" : "SUCCESS"}, {"name" : "get_max", "result" : "SUCCESS"}, {"name" : "rotate_right1", "result" : "SUCCESS"}, {"name" : "rotate_right", "result" : "SUCCESS"}, {"name" : "rotate_left1", "result" : "SUCCESS"}, {"name" : "rotate_left", "result" : "SUCCESS"}, {"name" : "height1", "result" : "SUCCESS"}, {"name" : "height", "result" : "SUCCESS"}
  ]},
  {"name": "avl.ss", "flags": "", "checks": [
    {"name" : "insert_inline", "result" : "SUCCESS"}, {"name" : "insert", "result" : "SUCCESS"}, {"name" : "rotate_double_right", "result" : "SUCCESS"}, {"name" : "rotate_double_left", "result" : "SUCCESS"}, {"name" : "get_max", "result" : "SUCCESS"}, {"name" : "rotate_right", "result" : "SUCCESS"}, {"name" : "rotate_left", "result" : "SUCCESS"}, {"name" : "height", "result" : "SUCCESS"}
  ]},
  {"name": "bubble.ss", "flags": "", "checks": [
    {"name" : "bsort1", "result" : "SUCCESS"}, {"name" : "bubble1", "result" : "SUCCESS"}, {"name" : "id1", "result" : "SUCCESS"}
  ]},
  {"name": "cll.ss", "flags": "", "checks": [
    {"name" : "delete2", "result" : "SUCCESS"}, {"name" : "delete", "result" : "SUCCESS"}, {"name" : "count", "result" : "SUCCESS"}, {"name" : "count_rest", "result" : "SUCCESS"}
  ]},
  {"name": "dll.ss", "flags": "", "checks": [
    {"name" : "append", "result" : "SUCCESS"}, {"name" : "insert", "result" : "SUCCESS"}
  ]},
  {"name": "insertion.ss", "flags": "", "checks": [
    {"name" : "insertion_sort", "result" : "SUCCESS"}, {"name" : "delete", "result" : "SUCCESS"}, {"name" : "insert", "result" : "SUCCESS"}
  ]},
  {"name": "ll.ss", "flags": "", "checks": [
    {"name" : "reverse1", "result" : "SUCCESS"}, {"name" : "delete1", "result" : "SUCCESS"}, {"name" : "insert", "result" : "SUCCESS"}, {"name" : "append", "result" : "SUCCESS"}
  ]},
  {"name": "merge-modular.ss", "flags": "", "checks": [
    {"name" : "insert1", "result" : "SUCCESS"}, {"name" : "merge1", "result" : "SUCCESS"}, {"name" : "merge_sort1", "result" : "SUCCESS"}, {"name" : "split1", "result" : "SUCCESS"}, {"name" : "count1", "result" : "SUCCESS"}
  ]},
  {"name": "merge.ss", "flags": "", "checks": [
    {"name" : "insert1", "result" : "SUCCESS"}, {"name" : "merge1", "result" : "SUCCESS"}, {"name" : "merge_sort1", "result" : "SUCCESS"}, {"name" : "split1", "result" : "SUCCESS"}, {"name" : "count1", "result" : "SUCCESS"}
  ]},
  {"name": "qsort.ss", "flags": "", "checks": [
    {"name" : "qsort1", "result" : "SUCCESS"}, {"name" : "append_bll1", "result" : "SUCCESS"}, {"name" : "partition1", "result" : "SUCCESS"}
  ]},
  {"name": "rb_bags.ss", "flags": "", "checks": [
    {"name" : "insert_1", "result" : "SUCCESS"}, {"name" : "del_1", "result" : "SUCCESS"}, {"name" : "remove_min_1", "result" : "SUCCESS"}, {"name" : "del_2r_1", "result" : "SUCCESS"}, {"name" : "del_2_1", "result" : "SUCCESS"}, {"name" : "del_3r_1", "result" : "SUCCESS"}, {"name" : "del_3_1", "result" : "SUCCESS"}, {"name" : "del_4r_1", "result" : "SUCCESS"}, {"name" : "del_4_1", "result" : "SUCCESS"}, {"name" : "del_5r_1", "result" : "SUCCESS"}, {"name" : "del_5_1", "result" : "SUCCESS"}, {"name" : "del_6r_1", "result" : "SUCCESS"}, {"name" : "del_6_1", "result" : "SUCCESS"}, {"name" : "is_black_1", "result" : "SUCCESS"}, {"name" : "is_red_1", "result" : "SUCCESS"}, {"name" : "case_2r_1", "result" : "SUCCESS"}, {"name" : "rotate_case_3r_1", "result" : "SUCCESS"}, {"name" : "case_2_1", "result" : "SUCCESS"}, {"name" : "rotate_case_3_1", "result" : "SUCCESS"}
  ]},
  {"name": "rb.scp.ss", "flags": "", "checks": [
    {"name" : "insert_1", "result" : "SUCCESS"}, {"name" : "insert", "result" : "SUCCESS"}, {"name" : "del_1", "result" : "SUCCESS"}, {"name" : "del", "result" : "SUCCESS"}, {"name" : "remove_min_1", "result" : "SUCCESS"}, {"name" : "remove_min", "result" : "SUCCESS"}, {"name" : "del_2r_1", "result" : "SUCCESS"}, {"name" : "del_2r", "result" : "SUCCESS"}, {"name" : "del_2_1", "result" : "SUCCESS"}, {"name" : "del_2", "result" : "SUCCESS"}, {"name" : "del_3r_1", "result" : "SUCCESS"}, {"name" : "del_3r", "result" : "SUCCESS"}, {"name" : "del_3_1", "result" : "SUCCESS"}, {"name" : "del_3", "result" : "SUCCESS"}, {"name" : "del_4r_1", "result" : "SUCCESS"}, {"name" : "del_4r", "result" : "SUCCESS"}, {"name" : "del_4_1", "result" : "SUCCESS"}, {"name" : "del_4", "result" : "SUCCESS"}, {"name" : "del_5r_1", "result" : "SUCCESS"}, {"name" : "del_5r", "result" : "SUCCESS"}, {"name" : "del_5_1", "result" : "SUCCESS"}, {"name" : "del_5", "result" : "SUCCESS"}, {"name" : "del_6r_1", "result" : "SUCCESS"}, {"name" : "del_6r", "result" : "SUCCESS"}, {"name" : "del_6_1", "result" : "SUCCESS"}, {"name" : "del_6", "result" : "SUCCESS"}, {"name" : "is_black_1", "result" : "SUCCESS"}, {"name" : "is_black", "result" : "SUCCESS"}, {"name" : "is_red_1", "result" : "SUCCESS"}, {"name" : "is_red", "result" : "SUCCESS"}, {"name" : "case_2r_1", "result" : "SUCCESS"}, {"name" : "case_2r", "result" : "SUCCESS"}, {"name" : "rotate_case_3r_1", "result" : "SUCCESS"}, {"name" : "rotate_case_3r", "result" : "SUCCESS"}, {"name" : "case_2_1", "result" : "SUCCESS"}, {"name" : "case_2", "result" : "SUCCESS"}, {"name" : "rotate_case_3_1", "result" : "SUCCESS"}, {"name" : "rotate_case_3", "result" : "SUCCESS"}
  ]},
  {"name": "selection.ss", "flags": "", "checks": [
    {"name" : "selection_sort", "result" : "SUCCESS"}, {"name" : "delete_min", "result" : "SUCCESS"}, {"name" : "find_min", "result" : "SUCCESS"}
  ]},
  {"name": "trees.ss", "flags": "", "checks": [
    {"name" : "delete1", "result" : "SUCCESS"}, {"name" : "remove_min1", "result" : "SUCCESS"}, {"name" : "insert1", "result" : "SUCCESS"}, {"name" : "flatten1", "result" : "SUCCESS"}, {"name" : "append1", "result" : "SUCCESS"}
  ]}
  ],
  "imm-field": [
  {"name": "imspd.ss", "flags": "-tp oc --field-imm --etcsu1 ", "checks": [
    {"name" : "check_pass", "result" : "SUCCESS"}, {"name" : "login", "result" : "SUCCESS"}
  ]},
  {"name": "getset.ss", "flags": "-tp oc --field-imm --etcsu1 ", "checks": [
    {"name" : "sset", "result" : "SUCCESS"}, {"name" : "get", "result" : "SUCCESS"}, {"name" : "setA", "result" : "SUCCESS"}, {"name" : "getA", "result" : "SUCCESS"}, {"name" : "non_negative", "result" : "SUCCESS"}
  ]},
  {"name": "bigint.ss", "flags": "-tp redlog --field-imm --etcsu1 ", "checks": [
    {"name" : "clone", "result" : "SUCCESS"}, {"name" : "add_one_digit", "result" : "SUCCESS"}, {"name" : "add_c", "result" : "SUCCESS"}, {"name" : "add", "result" : "SUCCESS"}, {"name" : "div_with_remainder", "result" : "SUCCESS"}, {"name" : "bigint_of", "result" : "SUCCESS"}, {"name" : "compare_int", "result" : "SUCCESS"}, {"name" : "is_zero", "result" : "SUCCESS"}, {"name" : "compare2", "result" : "SUCCESS"}, {"name" : "int_value", "result" : "SUCCESS"}, {"name" : "mult_c", "result" : "SUCCESS"}, {"name" : "shift_left", "result" : "SUCCESS"}, {"name" : "mult", "result" : "SUCCESS"}, {"name" : "sub_one_digit", "result" : "SUCCESS"}, {"name" : "sub_c", "result" : "SUCCESS"}
  ]},
  {"name": "insertion_simple.ss", "flags": "-tp oc --field-imm --etcsu1 ", "checks": [
    {"name" : "insert", "result" : "SUCCESS"}
  ]},
  {"name": "schorr-waite-list.ss", "flags": "-tp om --field-imm --etcsu1 ", "checks": [
    {"name" : "lscan", "result" : "SUCCESS"}
  ]},
  {"name": "sll.ss", "flags": "-tp oc --field-imm --etcsu1 ", "checks": [
    {"name" : "delete", "result" : "SUCCESS"}, {"name" : "get_tail", "result" : "SUCCESS"}, {"name" : "insert", "result" : "SUCCESS"}, {"name" : "insert2", "result" : "SUCCESS"}
  ]}
  ],
  "hip": [
  {"name": "eps.ss", "flags": "", "checks": [
    {"name" : "get_next", "result" : "SUCCESS"}, {"name" : "get_next_next", "result" : "SUCCESS"}
  ]},
  {"name": "append.ss", "flags": "", "checks": [
    {"name" : "append", "result" : "SUCCESS"}
  ]},
  {"name": "append-tail.ss", "flags": "", "checks": [
    {"name" : "append", "result" : "SUCCESS"}
  ]},
  {"name": "avl-bind.ss", "flags": "", "checks": [
    {"name" : "height", "result" : "SUCCESS"}, {"name" : "rotate_left", "result" : "SUCCESS"}, {"name" : "rotate_right", "result" : "SUCCESS"}, {"name" : "get_max", "result" : "SUCCESS"}, {"name" : "rotate_double_left", "result" : "SUCCESS"}, {"name" : "rotate_double_right", "result" : "SUCCESS"}, {"name" : "build_avl1", "result" : "SUCCESS"}, {"name" : "build_avl2", "result" : "SUCCESS"}, {"name" : "insert", "result" : "SUCCESS"}
  ]},
  {"name": "avl.ss", "flags": "", "checks": [
    {"name" : "height", "result" : "SUCCESS"}, {"name" : "rotate_left", "result" : "SUCCESS"}, {"name" : "rotate_right", "result" : "SUCCESS"}, {"name" : "get_max", "result" : "SUCCESS"}, {"name" : "rotate_double_left", "result" : "SUCCESS"}, {"name" : "rotate_double_right", "result" : "SUCCESS"}, {"name" : "build_avl1", "result" : "SUCCESS"}, {"name" : "build_avl2", "result" : "SUCCESS"}, {"name" : "insert", "result" : "SUCCESS"}, {"name" : "insert_inline", "result" : "SUCCESS"}
  ]},
  {"name": "avl-orig-2.ss", "flags": "", "checks": [
    {"name" : "height", "result" : "SUCCESS"}, {"name" : "get_max", "result" : "SUCCESS"}, {"name" : "insert", "result" : "SUCCESS"}, {"name" : "double_left_child", "result" : "SUCCESS"}, {"name" : "double_right_child", "result" : "SUCCESS"}, {"name" : "rotate_left_child", "result" : "SUCCESS"}, {"name" : "rotate_right_child", "result" : "SUCCESS"}
  ]},
  {"name": "avl-orig3.ss", "flags": "", "checks": [
    {"name" : "height", "result" : "SUCCESS"}, {"name" : "get_max", "result" : "SUCCESS"}, {"name" : "insert", "result" : "SUCCESS"}, {"name" : "double_left_child", "result" : "SUCCESS"}, {"name" : "double_right_child", "result" : "SUCCESS"}, {"name" : "rotate_left_child", "result" : "SUCCESS"}, {"name" : "rotate_right_child", "result" : "SUCCESS"}
  ]},
  {"name": "bll.ss", "flags": "", "checks": [
    {"name" : "insert", "result" : "SUCCESS"}, {"name" : "delete", "result" : "SUCCESS"}
  ]},
  {"name": "bubble.ss", "flags": "", "checks": [
    {"name" : "id2", "result" : "SUCCESS"}, {"name" : "id3", "result" : "SUCCESS"}, {"name" : "bubble", "result" : "SUCCESS"}, {"name" : "bsort", "result" : "SUCCESS"}
  ]},
  {"name": "cll.ss", "flags": "", "checks": [
    {"name" : "test", "result" : "SUCCESS"}, {"name" : "insert", "result" : "SUCCESS"}, {"name" : "count_rest", "result" : "SUCCESS"}, {"name" : "count", "result" : "SUCCESS"}, {"name" : "delete", "result" : "SUCCESS"}
  ]},
  {"name": "complete.ss", "flags": "", "checks": [
    {"name" : "maxim", "result" : "SUCCESS"}, {"name" : "minim", "result" : "SUCCESS"}, {"name" : "height", "result" : "SUCCESS"}, {"name" : "min_height", "result" : "SUCCESS"}, {"name" : "insert", "result" : "SUCCESS"}
  ]},
  {"name": "dll.ss", "flags": "", "checks": [
    {"name" : "insert", "result" : "SUCCESS"}, {"name" : "delete", "result" : "SUCCESS"}, {"name" : "delete1", "result" : "SUCCESS"}, {"name" : "test_del", "result" : "SUCCESS"}, {"name" : "test_del2", "result" : "SUCCESS"}, {"name" : "test_fold", "result" : "SUCCESS"}, {"name" : "append", "result" : "SUCCESS"}, {"name" : "append1", "result" : "SUCCESS"}, {"name" : "f1", "result" : "SUCCESS"}, {"name" : "f2", "result" : "SUCCESS"}
  ]},
  {"name": "heaps.ss", "flags": "", "checks": [
    {"name" : "insert", "result" : "SUCCESS"}, {"name" : "deleteoneel", "result" : "SUCCESS"}, {"name" : "deleteone", "result" : "SUCCESS"}, {"name" : "ripple", "result" : "SUCCESS"}, {"name" : "deletemax", "result" : "SUCCESS"}
  ]},
  {"name": "insertion.ss", "flags": "", "checks": [
    {"name" : "insert", "result" : "SUCCESS"}, {"name" : "insertion_sort", "result" : "SUCCESS"}
  ]},
  {"name": "ll.ss", "flags": "", "checks": [
    {"name" : "append", "result" : "SUCCESS"}, {"name" : "ret_first", "result" : "SUCCESS"}, {"name" : "get_next", "result" : "SUCCESS"}, {"name" : "set_next", "result" : "SUCCESS"}, {"name" : "set_null", "result" : "SUCCESS"}, {"name" : "get_next_next", "result" : "SUCCESS"}, {"name" : "insert", "result" : "SUCCESS"}, {"name" : "delete", "result" : "SUCCESS"}, {"name" : "create_list", "result" : "SUCCESS"}, {"name" : "reverse", "result" : "SUCCESS"}
  ]},
  {"name": "merge.ss", "flags": "", "checks": [
    {"name" : "count", "result" : "SUCCESS"}, {"name" : "split_func", "result" : "SUCCESS"}, {"name" : "merge_sort", "result" : "SUCCESS"}, {"name" : "merge", "result" : "SUCCESS"}, {"name" : "insert", "result" : "SUCCESS"}
  ]},
  {"name": "perfect.ss", "flags": "", "checks": [
    {"name" : "simple_insert", "result" : "SUCCESS"}, {"name" : "create", "result" : "SUCCESS"}, {"name" : "maxim", "result" : "SUCCESS"}, {"name" : "height", "result" : "SUCCESS"}, {"name" : "insert", "result" : "SUCCESS"}
  ]},
  {"name": "qsort.ss", "flags": "", "checks": [
    {"name" : "partition", "result" : "SUCCESS"}, {"name" : "append_bll", "result" : "SUCCESS"}, {"name" : "qsort", "result" : "SUCCESS"}
  ]},
  {"name": "selection.ss", "flags": "", "checks": [
    {"name" : "find_min", "result" : "SUCCESS"}, {"name" : "delete_min", "result" : "SUCCESS"}, {"name" : "selection_sort", "result" : "SUCCESS"}
  ]},
  {"name": "sll.ss", "flags": "", "checks": [
    {"name" : "insert", "result" : "SUCCESS"}, {"name" : "insert2", "result" : "SUCCESS"}, {"name" : "delete", "result" : "SUCCESS"}, {"name" : "get_tail", "result" : "SUCCESS"}, {"name" : "insertion_sort", "result" : "SUCCESS"}, {"name" : "id", "result" : "SUCCESS"}
  ]},
  {"name": "trees.ss", "flags": "", "checks": [
    {"name" : "append", "result" : "SUCCESS"}, {"name" : "count", "result" : "SUCCESS"}, {"name" : "flatten", "result" : "SUCCESS"}, {"name" : "insert", "result" : "SUCCESS"}, {"name" : "remove_min", "result" : "SUCCESS"}, {"name" : "delete", "result" : "SUCCESS"}
  ]},
  {"name": "rb.ss", "flags": "", "checks": [
    {"name" : "rotate_case_3", "result" : "SUCCESS"}, {"name" : "case_2", "result" : "SUCCESS"}, {"name" : "rotate_case_3r", "result" : "SUCCESS"}, {"name" : "case_2r", "result" : "SUCCESS"}, {"name" : "is_red", "result" : "SUCCESS"}, {"name" : "is_black", "result" : "SUCCESS"}, {"name" : "del_6", "result" : "SUCCESS"}, {"name" : "del_6r", "result" : "SUCCESS"}, {"name" : "del_5", "result" : "SUCCESS"}, {"name" : "del_5r", "result" : "SUCCESS"}, {"name" : "del_4", "result" : "SUCCESS"}, {"name" : "del_4r", "result" : "SUCCESS"}, {"name" : "del_3", "result" : "SUCCESS"}, {"name" : "del_3r", "result" : "SUCCESS"}, {"name" : "del_2", "result" : "SUCCESS"}, {"name" : "remove_min", "result" : "SUCCESS"}, {"name" : "del", "result" : "SUCCESS"}, {"name" : "insert", "result" : "SUCCESS"}
  ]},
  {"name": "global1.ss", "flags": "", "checks": [
    {"name" : "increase", "result" : "SUCCESS"}
  ]},
  {"name": "global2.ss", "flags": "", "checks": [
    {"name" : "increase", "result" : "SUCCESS"}
  ]},
  {"name": "global3.ss", "flags": "", "checks": [
    {"name" : "increase", "result" : "SUCCESS"}, {"name" : "increase_n", "result" : "SUCCESS"}
  ]},
  {"name": "global4.ss", "flags": "", "checks": [
    {"name" : "increase_n", "result" : "SUCCESS"}, {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "global5.ss", "flags": "", "checks": [
    {"name" : "increase", "result" : "SUCCESS"}, {"name" : "decrease", "result" : "SUCCESS"}
  ]},
  {"name": "global-ll.ss", "flags": "", "checks": [
    {"name" : "insert_rec", "result" : "SUCCESS"}, {"name" : "delete_last_rec", "result" : "SUCCESS"}, {"name" : "insert", "result" : "SUCCESS"}, {"name" : "delete_last", "result" : "SUCCESS"}, {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "global-mutual-rec.ss", "flags": "", "checks": [
    {"name" : "decrease1", "result" : "SUCCESS"}, {"name" : "decrease2", "result" : "SUCCESS"}, {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "classic/classic1.ss", "flags": "", "checks": [
    {"name" : "foo1", "result" : "SUCCESS"}, {"name" : "foo2", "result" : "SUCCESS"}
  ]},
  {"name": "classic/classic1.ss", "flags": "--classic", "checks": [
    {"name" : "foo1", "result" : "FAIL"}, {"name" : "foo2", "result" : "SUCCESS"}
  ]},
  {"name": "classic/classic1a.ss", "flags": "", "checks": [
    {"name" : "foo1", "result" : "SUCCESS"}, {"name" : "foo2", "result" : "SUCCESS"}
  ]},
  {"name": "classic/classic1a.ss", "flags": "--classic", "checks": [
    {"name" : "foo1", "result" : "SUCCESS"}, {"name" : "foo2", "result" : "FAIL"}
  ]},
  {"name": "classic/classic2.ss", "flags": "", "checks": [
    {"name" : "foo1", "result" : "FAIL"}, {"name" : "foo2", "result" : "SUCCESS"}
  ]},
  {"name": "classic/classic2a.ss", "flags": "", "checks": [
    {"name" : "foo1", "result" : "SUCCESS"}, {"name" : "foo2", "result" : "FAIL"}
  ]},
  {"name": "classic/classic3.ss", "flags": "", "checks": [
    {"name" : "foo1", "result" : "SUCCESS"}, {"name" : "foo2", "result" : "SUCCESS"}
  ]},
  {"name": "classic/classic3a.ss", "flags": "", "checks": [
    {"name" : "foo1", "result" : "SUCCESS"}, {"name" : "foo2", "result" : "SUCCESS"}
  ]},
  {"name": "../../modular_examples/dll-modular.ss", "flags": "--overeps", "checks": [
    {"name" : "append", "result" : "SUCCESS"}, {"name" : "append1", "result" : "SUCCESS"}, {"name" : "append2", "result" : "SUCCESS"}, {"name" : "delete", "result" : "SUCCESS"}, {"name" : "delete1", "result" : "SUCCESS"}, {"name" : "f1", "result" : "SUCCESS"}, {"name" : "f2", "result" : "SUCCESS"}, {"name" : "insert", "result" : "SUCCESS"}, {"name" : "test_del", "result" : "SUCCESS"}, {"name" : "test_del2", "result" : "SUCCESS"}, {"name" : "test_fold", "result" : "SUCCESS"}
  ]},
  {"name": "../../modular_examples/selection-modular.ss", "flags": "--overeps --lda", "checks": [
    {"name" : "delete_min", "result" : "SUCCESS"}, {"name" : "find_min", "result" : "SUCCESS"}, {"name" : "selection_sort", "result" : "SUCCESS"}
  ]},
  {"name": "../../modular_examples/qsort-modular.ss", "flags": "--overeps --lda", "checks": [
    {"name" : "append_bll", "result" : "SUCCESS"}, {"name" : "partition", "result" : "SUCCESS"}, {"name" : "qsort", "result" : "SUCCESS"}
  ]},
  {"name": "vperm/ho_vperm_check.ss", "flags": "--ann-vp", "checks": [
    {"name" : "inc", "result" : "SUCCESS"}, {"name" : "incCell", "result" : "SUCCESS"}, {"name" : "test1", "result" : "FAIL"}, {"name" : "test2", "result" : "FAIL"}, {"name" : "test3", "result" : "FAIL"}, {"name" : "test4", "result" : "FAIL"}
  ]},
  {"name": "vperm/task_decompose.ss", "flags": "--ann-vp", "checks": [
    {"name" : "inc", "result" : "SUCCESS"}, {"name" : "creator", "result" : "SUCCESS"}, {"name" : "joiner", "result" : "SUCCESS"}, {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "parahip/cell.ss", "flags": "--en-para -tp parahip --en-lsmu-infer --en-thrd-and-conj", "checks": [
    {"name" : "test", "result" : "SUCCESS"}, {"name" : "test1", "result" : "FAIL"}
  ]},
  {"name": "parahip/cell-extreme-cases.ss", "flags": "--en-para -tp parahip --en-lsmu-infer --en-thrd-and-conj", "checks": [
    {"name" : "test", "result" : "FAIL"}, {"name" : "test2", "result" : "FAIL"}, {"name" : "test3", "result" : "FAIL"}, {"name" : "test4", "result" : "FAIL"}
  ]},
  {"name": "parahip/ordered-locking.ss", "flags": "--en-para -tp parahip --en-lsmu-infer --en-thrd-and-conj", "checks": [
    {"name" : "func", "result" : "SUCCESS"}, {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "parahip/unordered-locking.ss", "flags": "--en-para -tp parahip --en-lsmu-infer --en-thrd-and-conj", "checks": [
    {"name" : "func", "result" : "FAIL"}, {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "veribsync/hip-bperm1.ss", "flags": "--en-para -perm bperm -tp redlog", "checks": [
    {"name" : "destroyCellFail", "result" : "FAIL"}, {"name" : "readCell", "result" : "SUCCESS"}, {"name" : "testNewCell", "result" : "SUCCESS"}, {"name" : "testNewCell2", "result" : "SUCCESS"}, {"name" : "updateCell", "result" : "SUCCESS"}, {"name" : "updateCellFail", "result" : "FAIL"}
  ]},
  {"name": "veribsync/barrier-static-consistency.ss", "flags": "--en-para -perm bperm -tp redlog", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "main_fail", "result" : "FAIL"}, {"name" : "participant", "result" : "SUCCESS"}, {"name" : "participant1", "result" : "SUCCESS"}, {"name" : "participant_fail", "result" : "FAIL"}
  ]},
  {"name": "veribsync/barrier-dynamic-exp3.ss", "flags": "--en-para -perm bperm -tp redlog", "checks": [
    {"name" : "main", "result" : "FAIL"}, {"name" : "thread1", "result" : "SUCCESS"}, {"name" : "thread2", "result" : "SUCCESS"}, {"name" : "thread3", "result" : "SUCCESS"}
  ]},
  {"name": "veribsync/barrier-dynamic-exp4.ss", "flags": "--en-para -perm bperm -tp redlog", "checks": [
    {"name" : "childthread1", "result" : "SUCCESS"}, {"name" : "childthread2", "result" : "SUCCESS"}, {"name" : "main", "result" : "SUCCESS"}, {"name" : "thread1", "result" : "SUCCESS"}, {"name" : "thread2", "result" : "SUCCESS"}
  ]},
  {"name": "conchip/mapreduce.ss", "flags": "-tp parahip --classic", "checks": [
    {"name" : "count_helper", "result" : "SUCCESS"}, {"name" : "countList", "result" : "SUCCESS"}, {"name" : "destroyList", "result" : "SUCCESS"}, {"name" : "main", "result" : "SUCCESS"}, {"name" : "mapper_helper", "result" : "SUCCESS"}, {"name" : "mapper", "result" : "SUCCESS"}, {"name" : "reducer1", "result" : "SUCCESS"}, {"name" : "reducer2", "result" : "SUCCESS"}
  ]},
  {"name": "conchip/multi-join2.ss", "flags": "-tp parahip  -perm fperm --classic", "checks": [
    {"name" : "main", "result" : "SUCCESS"}, {"name" : "thread1", "result" : "SUCCESS"}, {"name" : "thread2", "result" : "SUCCESS"}
  ]},
  {"name": "conchip/latch-exp2.ss", "flags": "-tp parahip --classic", "checks": [
    {"name" : "main", "result" : "FAIL"}, {"name" : "thread1", "result" : "SUCCESS"}
  ]},
  {"name": "conchip/deadpool.ss", "flags": "-tp parahip -perm fperm --classic", "checks": [
    {"name" : "destroyDeadPool", "result" : "SUCCESS"}, {"name" : "forkHelper", "result" : "SUCCESS"}, {"name" : "forkThreads", "result" : "SUCCESS"}, {"name" : "joinHelper", "result" : "SUCCESS"}, {"name" : "joinThreads", "result" : "SUCCESS"}, {"name" : "main", "result" : "SUCCESS"}, {"name" : "thread", "result" : "SUCCESS"}
  ]}
  ],
  "infinity": [
  {"name": "inflist.ss", "flags": "--en-inf", "checks": [
    {"name" : "remove", "result" : "SUCCESS"}, {"name" : "append", "result" : "SUCCESS"}
  ]},
  {"name": "infll_take.ss", "flags": "--en-inf", "checks": [
    {"name" : "take", "result" : "SUCCESS"}
  ]},
  {"name": "inftree.ss", "flags": "--en-inf", "checks": [
    {"name" : "count", "result" : "SUCCESS"}
  ]},
  {"name": "stream.ss", "flags": "--en-inf", "checks": [
    {"name" : "zip", "result" : "SUCCESS"}
  ]},
  {"name": "bst-inf.ss", "flags": "--en-inf", "checks": [
    {"name" : "delete", "result" : "SUCCESS"}, {"name" : "remove_min", "result" : "SUCCESS"}
  ]},
  {"name": "inf-selsort.ss", "flags": "--en-inf", "checks": [
    {"name" : "find_min", "result" : "SUCCESS"}, {"name" : "delete_min", "result" : "SUCCESS"}, {"name" : "selection_sort", "result" : "SUCCESS"}
  ]},
  {"name": "inf-ins.ss", "flags": "--dsd --en-inf", "checks": [
    {"name" : "insert", "result" : "SUCCESS"}
  ]},
  {"name": "inf-sel.ss", "flags": "--dsd --en-inf", "checks": [
    {"name" : "find_min", "result" : "SUCCESS"}, {"name" : "delete_min", "result" : "SUCCESS"}, {"name" : "selection_sort", "result" : "SUCCESS"}
  ]},
  {"name": "bubble-inf.ss", "flags": "--en-inf", "checks": [
    {"name" : "id2", "result" : "SUCCESS"}, {"name" : "id3", "result" : "SUCCESS"}, {"name" : "bubble", "result" : "SUCCESS"}, {"name" : "bsort", "result" : "SUCCESS"}
  ]},
  {"name": "heaps-inf.ss", "flags": "--en-inf", "checks": [
    {"name" : "insert", "result" : "SUCCESS"}, {"name" : "deleteoneel", "result" : "SUCCESS"}, {"name" : "deleteone", "result" : "SUCCESS"}, {"name" : "deletemax", "result" : "SUCCESS"}
  ]},
  {"name": "merge-inf.ss", "flags": "--en-inf --en-disj-compute", "checks": [
    {"name" : "merge", "result" : "SUCCESS"}
  ]}
  ],
  "imm": [
  {"name": "bigint.ss", "flags": " --imm -tp redlog", "checks": [
    {"name" : "clone", "result" : "SUCCESS"}, {"name" : "int_value", "result" : "SUCCESS"}, {"name" : "bigint_of", "result" : "SUCCESS"}, {"name" : "add_one_digit", "result" : "SUCCESS"}, {"name" : "add_c", "result" : "SUCCESS"}, {"name" : "add", "result" : "SUCCESS"}, {"name" : "sub_one_digit", "result" : "SUCCESS"}, {"name" : "sub_c", "result" : "SUCCESS"}, {"name" : "sub", "result" : "SUCCESS"}, {"name" : "mult_c", "result" : "SUCCESS"}, {"name" : "shift_left", "result" : "SUCCESS"}, {"name" : "mult", "result" : "SUCCESS"}, {"name" : "is_zero", "result" : "SUCCESS"}, {"name" : "is_equal", "result" : "SUCCESS"}, {"name" : "compare2", "result" : "SUCCESS"}, {"name" : "compare_int", "result" : "SUCCESS"}, {"name" : "div_with_remainder", "result" : "SUCCESS"}
  ]},
  {"name": "bigint_imm.ss", "flags": " --imm -tp redlog", "checks": [
    {"name" : "clone", "result" : "SUCCESS"}, {"name" : "int_value", "result" : "SUCCESS"}, {"name" : "bigint_of", "result" : "SUCCESS"}, {"name" : "add_one_digit", "result" : "SUCCESS"}, {"name" : "test", "result" : "SUCCESS"}, {"name" : "add_c", "result" : "SUCCESS"}, {"name" : "add", "result" : "SUCCESS"}, {"name" : "sub_one_digit", "result" : "SUCCESS"}, {"name" : "sub_c", "result" : "SUCCESS"}, {"name" : "sub", "result" : "SUCCESS"}, {"name" : "mult_c", "result" : "SUCCESS"}, {"name" : "shift_left", "result" : "SUCCESS"}, {"name" : "mult2", "result" : "SUCCESS"}, {"name" : "is_zero", "result" : "SUCCESS"}, {"name" : "is_equal", "result" : "SUCCESS"}, {"name" : "compare2", "result" : "SUCCESS"}, {"name" : "compare_int", "result" : "SUCCESS"}, {"name" : "div_with_remainder", "result" : "SUCCESS"}
  ]},
  {"name": "bigint_imm-star.ss", "flags": " --imm -tp redlog", "checks": [
    {"name" : "clone", "result" : "SUCCESS"}, {"name" : "int_value", "result" : "SUCCESS"}, {"name" : "bigint_of", "result" : "SUCCESS"}, {"name" : "add_one_digit", "result" : "SUCCESS"}, {"name" : "add_c", "result" : "SUCCESS"}, {"name" : "add", "result" : "SUCCESS"}, {"name" : "sub_one_digit", "result" : "SUCCESS"}, {"name" : "sub_c", "result" : "SUCCESS"}, {"name" : "sub", "result" : "SUCCESS"}, {"name" : "mult_c", "result" : "SUCCESS"}, {"name" : "shift_left", "result" : "SUCCESS"}, {"name" : "mult", "result" : "SUCCESS"}, {"name" : "is_zero", "result" : "SUCCESS"}, {"name" : "is_equal", "result" : "SUCCESS"}, {"name" : "compare2", "result" : "SUCCESS"}, {"name" : "compare_int", "result" : "SUCCESS"}, {"name" : "div_with_remainder", "result" : "SUCCESS"}
  ]},
  {"name": "bigint-tight.ss", "flags": " --imm -tp redlog", "checks": [
    {"name" : "clone", "result" : "SUCCESS"}, {"name" : "int_value", "result" : "SUCCESS"}, {"name" : "bigint_of", "result" : "SUCCESS"}, {"name" : "add_one_digit", "result" : "SUCCESS"}, {"name" : "add_c", "result" : "SUCCESS"}, {"name" : "add", "result" : "SUCCESS"}, {"name" : "sub_one_digit", "result" : "SUCCESS"}, {"name" : "sub_c", "result" : "SUCCESS"}, {"name" : "sub", "result" : "SUCCESS"}, {"name" : "mult_c", "result" : "SUCCESS"}, {"name" : "shift_left", "result" : "SUCCESS"}, {"name" : "mult", "result" : "SUCCESS"}, {"name" : "is_zero", "result" : "SUCCESS"}, {"name" : "is_equal", "result" : "SUCCESS"}, {"name" : "compare2", "result" : "SUCCESS"}, {"name" : "compare_int", "result" : "SUCCESS"}, {"name" : "div_with_remainder", "result" : "SUCCESS"}
  ]},
  {"name": "bigint-tight-imm.ss", "flags": " --imm -tp redlog", "checks": [
    {"name" : "clone", "result" : "SUCCESS"}, {"name" : "int_value", "result" : "SUCCESS"}, {"name" : "bigint_of", "result" : "SUCCESS"}, {"name" : "add_one_digit", "result" : "SUCCESS"}, {"name" : "test", "result" : "SUCCESS"}, {"name" : "add_c", "result" : "SUCCESS"}, {"name" : "add", "result" : "SUCCESS"}, {"name" : "sub_one_digit", "result" : "SUCCESS"}, {"name" : "sub_c", "result" : "SUCCESS"}, {"name" : "sub", "result" : "SUCCESS"}, {"name" : "mult_c", "result" : "SUCCESS"}, {"name" : "shift_left", "result" : "SUCCESS"}, {"name" : "mult", "result" : "SUCCESS"}, {"name" : "is_zero", "result" : "SUCCESS"}, {"name" : "is_equal", "result" : "SUCCESS"}, {"name" : "compare2", "result" : "SUCCESS"}, {"name" : "compare_int", "result" : "SUCCESS"}, {"name" : "div_with_remainder", "result" : "SUCCESS"}
  ]},
  {"name": "bigint-tight-imm-star.ss", "flags": " --imm -tp redlog", "checks": [
    {"name" : "clone", "result" : "SUCCESS"}, {"name" : "int_value", "result" : "SUCCESS"}, {"name" : "bigint_of", "result" : "SUCCESS"}, {"name" : "add_one_digit", "result" : "SUCCESS"}, {"name" : "add_c", "result" : "SUCCESS"}, {"name" : "add", "result" : "SUCCESS"}, {"name" : "sub_one_digit", "result" : "SUCCESS"}, {"name" : "sub_c", "result" : "SUCCESS"}, {"name" : "sub", "result" : "SUCCESS"}, {"name" : "mult_c", "result" : "SUCCESS"}, {"name" : "shift_left", "result" : "SUCCESS"}, {"name" : "mult", "result" : "SUCCESS"}, {"name" : "is_zero", "result" : "SUCCESS"}, {"name" : "is_equal", "result" : "SUCCESS"}, {"name" : "compare2", "result" : "SUCCESS"}, {"name" : "compare_int", "result" : "SUCCESS"}, {"name" : "div_with_remainder", "result" : "SUCCESS"}
  ]},
  {"name": "append_imm.ss", "flags": " --imm ", "checks": [
    {"name" : "append", "result" : "SUCCESS"}
  ]},
  {"name": "kara.ss", "flags": " --imm -tp redlog", "checks": [
    {"name" : "karatsuba_mult", "result" : "SUCCESS"}
  ]},
  {"name": "kara-imm-star.ss", "flags": " --imm -tp redlog", "checks": [
    {"name" : "karatsuba_mult", "result" : "SUCCESS"}
  ]},
  {"name": "kara-imm-conj.ss", "flags": "--imm -tp redlog", "checks": [
    {"name" : "karatsuba_mult", "result" : "SUCCESS"}
  ]},
  {"name": "ll_imm.ss", "flags": " --imm ", "checks": [
    {"name" : "length", "result" : "SUCCESS"}, {"name" : "append", "result" : "SUCCESS"}, {"name" : "sumN", "result" : "SUCCESS"}, {"name" : "set_next", "result" : "SUCCESS"}, {"name" : "get_next_next", "result" : "SUCCESS"}, {"name" : "get_next", "result" : "SUCCESS"}
  ]}
  ],
  "array": [
  {"name": "arr_at.java", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "arr_binarysearch.java", "flags": "", "checks": [
    {"name" : "binary_search", "result" : "SUCCESS"}
  ]},
  {"name": "arr_search_decrease_less_than_two.java", "flags": "", "checks": [
    {"name" : "searchzero", "result" : "FAIL"}
  ]},
  {"name": "arr_bubblesort.java", "flags": "", "checks": [
    {"name" : "bubblesort", "result" : "SUCCESS"}, {"name" : "bubble", "result" : "SUCCESS"}
  ]},
  {"name": "arr_bubblesort_perm.java", "flags": "", "checks": [
    {"name" : "bubblesort", "result" : "SUCCESS"}, {"name" : "bubble", "result" : "SUCCESS"}
  ]},
  {"name": "arr_double.java", "flags": "", "checks": [
    {"name" : "doublearr", "result" : "SUCCESS"}
  ]},
  {"name": "arr_extract_nonzeros.java", "flags": "", "checks": [
    {"name" : "copy_nonzeros", "result" : "SUCCESS"}, {"name" : "count_nonzeros", "result" : "SUCCESS"}, {"name" : "extract_nonzeros", "result" : "SUCCESS"}
  ]},
  {"name": "arr_init.java", "flags": "", "checks": [
    {"name" : "zinit", "result" : "SUCCESS"}
  ]},
  {"name": "arr_insertsort.java", "flags": "", "checks": [
    {"name" : "insertelm", "result" : "SUCCESS"}, {"name" : "insertion_sort", "result" : "SUCCESS"}
  ]},
  {"name": "arr_insertsort_perm.java", "flags": "", "checks": [
    {"name" : "insertelm", "result" : "SUCCESS"}, {"name" : "insertion_sort", "result" : "SUCCESS"}
  ]},
  {"name": "arr_invert.java", "flags": "", "checks": [
    {"name" : "Invert", "result" : "SUCCESS"}, {"name" : "InvertHelper", "result" : "SUCCESS"}
  ]},
  {"name": "arr_max.java", "flags": "", "checks": [
    {"name" : "max_value_of_array", "result" : "SUCCESS"}
  ]},
  {"name": "arr_mergesort.java", "flags": "", "checks": [
    {"name" : "merge_sorted_arrays", "result" : "SUCCESS"}, {"name" : "copy_array", "result" : "SUCCESS"}, {"name" : "merge_sort", "result" : "SUCCESS"}
  ]},
  {"name": "arr_new_exp.java", "flags": "", "checks": [
    {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "arr_nqueens.java", "flags": "", "checks": [
    {"name" : "nQueens", "result" : "SUCCESS"}, {"name" : "nQueensHelper", "result" : "SUCCESS"}, {"name" : "nQueensHelperHelper", "result" : "SUCCESS"}
  ]},
  {"name": "arr_qsort.java", "flags": "", "checks": [
    {"name" : "arraypart", "result" : "SUCCESS"}, {"name" : "qsort", "result" : "SUCCESS"}
  ]},
  {"name": "arr_rev.java", "flags": "", "checks": [
    {"name" : "arrayrev", "result" : "SUCCESS"}
  ]},
  {"name": "arr_selectionsort.java", "flags": "", "checks": [
    {"name" : "array_index_of_max", "result" : "SUCCESS"}, {"name" : "selection_sort", "result" : "SUCCESS"}
  ]},
  {"name": "arr_selectionsort_perm.java", "flags": "", "checks": [
    {"name" : "array_index_of_max", "result" : "SUCCESS"}, {"name" : "selection_sort", "result" : "SUCCESS"}
  ]},
  {"name": "arr_sparse.java", "flags": "--imm", "checks": [
    {"name" : "create", "result" : "SUCCESS"}, {"name" : "get", "result" : "SUCCESS"}, {"name" : "setsa", "result" : "SUCCESS"}
  ]},
  {"name": "arr_sum.java", "flags": "", "checks": [
    {"name" : "sigmaright", "result" : "SUCCESS"}, {"name" : "sigmaleft", "result" : "SUCCESS"}
  ]}
  ],
  "parahip": [
  {"name": "parahip/simple.ss", "flags": "--en-para -tp parahip --en-lsmu-infer --en-thrd-and-conj", "checks": [
    {"name" : "func", "result" : "SUCCESS"}, {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "parahip/forkjoin.ss", "flags": "--en-para -tp parahip --en-lsmu-infer --en-thrd-and-conj", "checks": [
    {"name" : "func", "result" : "SUCCESS"}, {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "parahip/cell.ss", "flags": "--en-para -tp parahip --en-lsmu-infer --en-thrd-and-conj", "checks": [
    {"name" : "test", "result" : "SUCCESS"}, {"name" : "test1", "result" : "FAIL"}
  ]},
  {"name": "parahip/cell4.ss", "flags": "--en-para -tp parahip --en-lsmu-infer --en-thrd-and-conj", "checks": [
    {"name" : "inc", "result" : "SUCCESS"}, {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "parahip/cell-lock-vperm.ss", "flags": "--en-para -tp parahip --en-lsmu-infer --en-thrd-and-conj", "checks": [
    {"name" : "testCell", "result" : "SUCCESS"}, {"name" : "testVar", "result" : "FAIL"}
  ]},
  {"name": "parahip/cell-extreme-cases.ss", "flags": "--en-para -tp parahip --en-lsmu-infer --en-thrd-and-conj", "checks": [
    {"name" : "test", "result" : "FAIL"}, {"name" : "test2", "result" : "FAIL"}, {"name" : "test3", "result" : "FAIL"}, {"name" : "test4", "result" : "FAIL"}
  ]},
  {"name": "parahip/ls-bind.ss", "flags": "--en-para -tp parahip --en-lsmu-infer --en-thrd-and-conj", "checks": [
    {"name" : "func", "result" : "SUCCESS"}, {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "parahip/ls-waitlevel2.ss", "flags": "--en-para -tp parahip --en-lsmu-infer --en-thrd-and-conj", "checks": [
    {"name" : "func2", "result" : "SUCCESS"}, {"name" : "func3", "result" : "SUCCESS"}, {"name" : "func4", "result" : "SUCCESS"}
  ]},
  {"name": "parahip/double-acquire.ss", "flags": "--en-para -tp parahip --en-lsmu-infer --en-thrd-and-conj", "checks": [
    {"name" : "func", "result" : "SUCCESS"}, {"name" : "main", "result" : "FAIL"}
  ]},
  {"name": "parahip/no-deadlock1.ss", "flags": "--en-para -tp parahip --en-lsmu-infer --en-thrd-and-conj", "checks": [
    {"name" : "func", "result" : "SUCCESS"}, {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "parahip/no-deadlock2.ss", "flags": "--en-para -tp parahip --en-lsmu-infer --en-thrd-and-conj", "checks": [
    {"name" : "func", "result" : "SUCCESS"}, {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "parahip/no-deadlock3.ss", "flags": "--en-para -tp parahip --en-lsmu-infer --en-thrd-and-conj", "checks": [
    {"name" : "func", "result" : "SUCCESS"}, {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "parahip/deadlock1.ss", "flags": "--en-para -tp parahip --en-lsmu-infer --en-thrd-and-conj", "checks": [
    {"name" : "func", "result" : "SUCCESS"}, {"name" : "main", "result" : "FAIL"}
  ]},
  {"name": "parahip/deadlock2.ss", "flags": "--en-para -tp parahip --en-lsmu-infer --en-thrd-and-conj", "checks": [
    {"name" : "func", "result" : "SUCCESS"}, {"name" : "main", "result" : "FAIL"}
  ]},
  {"name": "parahip/deadlock3.ss", "flags": "--en-para -tp parahip --en-lsmu-infer --en-thrd-and-conj", "checks": [
    {"name" : "func", "result" : "SUCCESS"}, {"name" : "main", "result" : "FAIL"}
  ]},
  {"name": "parahip/disj-no-deadlock1.ss", "flags": "--en-para -tp parahip --en-lsmu-infer --en-thrd-and-conj", "checks": [
    {"name" : "func", "result" : "SUCCESS"}, {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "parahip/disj-no-deadlock2.ss", "flags": "--en-para -tp parahip --en-lsmu-infer --en-thrd-and-conj", "checks": [
    {"name" : "func", "result" : "SUCCESS"}, {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "parahip/disj-no-deadlock3.ss", "flags": "--en-para -tp parahip --en-lsmu-infer --en-thrd-and-conj", "checks": [
    {"name" : "func", "result" : "SUCCESS"}, {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "parahip/disj-deadlock.ss", "flags": "--en-para -tp parahip --en-lsmu-infer --en-thrd-and-conj", "checks": [
    {"name" : "func", "result" : "SUCCESS"}, {"name" : "main", "result" : "FAIL"}
  ]},
  {"name": "parahip/ordered-locking.ss", "flags": "--en-para -tp parahip --en-lsmu-infer --en-thrd-and-conj", "checks": [
    {"name" : "func", "result" : "SUCCESS"}, {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "parahip/unordered-locking.ss", "flags": "--en-para -tp parahip --en-lsmu-infer --en-thrd-and-conj", "checks": [
    {"name" : "func", "result" : "FAIL"}, {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "parahip/multicast.ss", "flags": "--en-para -tp parahip --en-lsmu-infer --en-thrd-and-conj", "checks": [
    {"name" : "initialize", "result" : "SUCCESS"}, {"name" : "thread", "result" : "SUCCESS"}
  ]},
  {"name": "parahip/oracle.ss", "flags": "--en-para -tp parahip --en-lsmu-infer --en-thrd-and-conj", "checks": [
    {"name" : "thread", "result" : "SUCCESS"}, {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "parahip/owicki-gries.ss", "flags": "--en-para -tp parahip --en-lsmu-infer --en-thrd-and-conj", "checks": [
    {"name" : "incrementor2", "result" : "SUCCESS"}, {"name" : "incrementor1", "result" : "SUCCESS"}, {"name" : "main", "result" : "SUCCESS"}
  ]},
  {"name": "parahip/fibonacci.ss", "flags": "--en-para -tp parahip --en-lsmu-infer --en-thrd-and-conj", "checks": [
    {"name" : "seq_fib", "result" : "SUCCESS"}, {"name" : "para_fib", "result" : "SUCCESS"}
  ]},
  {"name": "parahip/create_and_acquire.ss", "flags": "--en-para -tp parahip --dis-locklevel --en-thrd-and-conj", "checks": [
    {"name" : "create_and_acquire", "result" : "SUCCESS"}
  ]}
  ]
}
