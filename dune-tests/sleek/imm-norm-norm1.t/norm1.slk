data cell{int f1}.
//1
checkentail x::cell<_> & x=y |- y::cell<_>.
print residue.
expect Valid.

//2
checkentail x::cell<_> & x=y |- y::cell<_>@A.
print residue.
expect Valid.

//3
checkentail x::cell<_> * x::cell<_>@A & x=y |- y::cell<_>.
print residue.
expect Valid.

//4
checkentail x::cell<v> * x::cell<w>@A & x=y |- v=w.
print residue.
expect Valid.

//5
checkentail x::cell<v> * x::cell<w>@A & x=y |- y::cell<w>@A.
print residue.
expect Valid.

//6
checkentail x::cell<3> * x::cell<w>@A & x=y |- y::cell<w>@A.
print residue.
expect Valid.

//7
checkentail x::cell<v> * x::cell<3>@A & x=y |- y::cell<3>@A.
print residue.
expect Valid.

//8
checkentail x::cell<v> * y::cell<3>@A & x=y |- y::cell<3>@A.
print residue.
expect Valid.

//9
checkentail x::cell<v> * z::cell<v>@A * y::cell<3>@A & x=y |- y::cell<3>@A.
print residue.
expect Valid.

//10
checkentail x::cell<v> * z::cell<v> * y::cell<3>@A & x=y |- y::cell<3>@A.
print residue.
expect Valid.

//11
checkentail x::cell<v> * z::cell<v> * y::cell<3> & x=y |- y::cell<3>@A.
print residue.
expect Valid.

//12
checkentail x::cell<v> * y::cell<3>@A & x=y |- x::cell<3>@L.
print residue.
expect Valid.

//13
checkentail x::cell<v>@L * y::cell<3>@A & x=y |- x::cell<3>.
print residue.
expect Fail.

//14
checkentail x::cell<v> * y::cell<3>@A & x=y |- v=4.
print residue.
expect Fail.
