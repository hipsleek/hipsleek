//Valid.Valid.Fail.Valid.Valid.Fail.Fail.Valid.Fail.Valid.Fail.Valid.Fail.Fail.Fail.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Fail.Fail.Valid.Valid.
data cell {
  int val;
}.

//1
checkentail x::cell<a>@L |- x::cell<b>@A.
print residue.
expect Valid.
//succeed

//2
checkentail x::cell<a>@L |- x::cell<b>@v & v=@A.
print residue.
expect Valid.

//3
checkentail x::cell<a>@A |- x::cell<b>@v & v=@L.
print residue.
expect Fail.

//4
checkentail x::cell<a>@L |- (exists v: x::cell<b>@v & v=@A).
print residue.
expect Valid.

//5
checkentail u=@L |- (exists v: u<:v & v=@A).
print residue.
expect Valid.

//6
checkentail u=@L & u=v |- v=@A.
print residue.
expect Fail.

//7
checkentail u=@L & u<:v |- v=@A.
print residue.
expect Fail.

//8
checkentail u=@L & v=@A |- u<:v.
print residue.
expect Valid.

//9
checkentail x::cell<a>@L & v=@M |- x::cell<b>@v.
print residue.
expect Fail.

//10
checkentail x::cell<a>@u & u=@L |- x::cell<b>@v & v=@A.
print residue.
expect Valid.

//11 
checkentail x::cell<a>@u & u=@L & u=v |- x::cell<b>@v & v=@A.
print residue.
expect Fail.

//12
checkentail x::cell<a>@u & u=@L & v=@A |- x::cell<b>@v & v=@A.
print residue.
expect Valid.

//13
checkentail x::cell<a>@u & u=@L |-(exists z: z=@M & z=@A).
print residue.
expect Fail.

//14
checkentail x::cell<a>@u & u=@L & z=@M |- z=@M & z=@A.
print residue.
expect Fail.

//15
checkentail x::cell<a>@u & u=@L |- x::cell<b>@v & v=@M.
print residue.
expect Fail.

//16
checkentail x::cell<a>@u & u=@L |- x::cell<b>@v & v=@L.
print residue.
expect Valid.

//17 
checkentail x::cell<a>@u & u=@L |- x::cell<b>@v.
print residue.
expect Valid.

//18
checkentail x::cell<a>@u & u=@M |- x::cell<b>@v.
print residue.
expect Valid.

//19
checkentail x::cell<a>@u & u=@M |- x::cell<b>@v & v=@A.
print residue.
expect Valid.

//20
checkentail x::cell<a>@u & u=@M  |- x::cell<b>@v & v<:@L.
print residue.
expect Valid.

//21
checkentail x::cell<a>@u & u=@M & v<:@L  |- x::cell<b>@v & v<:@L.
print residue.
expect Valid.

//22
checkentail x::cell<a>@u & u=@M & v=@L  |- x::cell<b>@v & v<:@L.
print residue.
expect Valid.

//23
checkentail x::cell<a>@u & u=@M & v=@L  |- x::cell<b>@v & v<:@L.
print residue.
expect Valid.

//24
checkentail c::cell<v>@a |-  c::cell<_>@b & b<:@L.
print residue.
expect Fail.

//25
checkentail c::cell<v>@a |-  c::cell<_>@L.
print residue.
expect Fail.

//26
checkentail c::cell<v>@a |-  c::cell<_>@b.
print residue.
expect Valid.

//27
checkentail c::cell<v>@a & a<:@L |-  c::cell<_>@b.
print residue.
expect Valid.