data node { int val ; node next }.

pred ll<n> == self = null & n = 0
	or self::node<next = r> * r::ll<n - 1>
	inv n >= 0.

pred sortl<n, mi> == self = null & n = 0
	or self::node<mi, r> * r::sortl<n - 1, k> & mi <= k
	inv n >= 0.

let $f1 = x::sortl<a, b>.
let $f2 = x::sortl<d, c>.

checkentail x::ll<m> |- x::ll<m>.
print residue.

checkentail $f1 |- $f2.
print residue.

