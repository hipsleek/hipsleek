// examples from bi-abduction paper

data node {
	node next;	
}.

pred ll<n> == self = null & n = 0 
	or self::node<q> * q::ll<n-1> 
  inv n >= 0.

pred lseg<p> == self = p 
	or self::node<q> * q::lseg<p> & self!=p 
  inv true.
  
// (1) 
//checkentail x::node<null>  |- x::ll<n>.
//print residue.

HeapPred H1(node y).
//(1)
infer [H1] H1(y)*x::node<null>  |- x::ll<n> * y::ll<m>.
print residue.

//(2)
infer [H1] H1(y)*x::node<null>*z::node<null>  |- x::ll<n> * y::ll<m>.
print residue.

//(3)
infer [H1] H1(y)* x::node<y>  |- x::node<a> * a::lseg<null> .
print residue.

//(4)
infer [H1] H1(y)* x::node<y>  |- x::node<a> * a::ll<n> .
print residue.

//(5)
infer [z,H1] H1(y)*x::node<z>  |- x::lseg<z> * y::lseg<null> .
print residue.

