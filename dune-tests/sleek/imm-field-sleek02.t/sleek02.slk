/*
@M - mutable   (0)
@I - immutable (1)
@L - lending   (2)
@A - no access (3)
*/

//data cell {int val;}.

data node {
	int val; 
	node next;	
}.

pred ll<n, v1> == self = null & n = 0 
	or self::node<a@v1, q> * 
    q::ll<n-1, v1>
  inv n >= 0.


// (1) Fail - ok
checkentail x::ll<n,@L> |- x::ll<n,@M>.
print residue.

// WN : should this succeed or fail?
// imm-field/sleek02.slk
// (2) Valid - ok 
checkentail x::ll<n,@M> |- x::ll<n,@L>.
print residue.

// (3) Valid
checkentail x::node<p@L,q> * q::ll<n,@L>@L & n > 2 |- x::ll<n+1,@L>@L & n > 2.
print residue.

// (4) Valid
checkentail x::node<p@A,q> * q::ll<n,@A>@L & n > 2 |- x::ll<n+1,@A>@L & n > 2.
print residue.

// (5) Valid
checkentail x::node<p@v,q> * q::ll<n,v>@L & n > 2 & v = @A |- x::ll<n+1,@A>@L & n > 2.
print residue.

// (6) Valid
checkentail x::node<p@v,q> * q::ll<n,v>@L & n > 2 &  @L <: v |- x::ll<n+1,@A>@L & n > 2.
print residue.

// (7) Fail 
// due to early inst weaker inst at the beginning (should be Valid)
checkentail x::node<p,q> * q::ll<n,_> & n > 1 |- x::ll<n+1,_> & n > 1.
print residue.

// (8) 
// Valid due to late inst
checkentail x::node<p,q> * q::ll<n,_> & n > 1 |- [kkk] x::ll<n+1,kkk> & n > 1.
print residue.

// (9) Fail 
checkentail x::node<_, null> * y::ll<_,_> |- x::ll<m, _> & m = 2.
print residue.

// (10) Valid
checkentail x::node<a@M, r@M> * r::ll<n, @M> |-   x::node<a@v2, q> * q::ll<n, v2>. //x::ll<n + 1, @M, @M>.
print residue.
// <1>x::node<a@M,r@A>@M[Orig]&0<=0 & v1=@M & v2=@M & @M=v2 & q=r&{FLOW,(17,18)=__norm}[] ------- TODO: check this residue after inference works

// (11) Valid
checkentail x::node<a@M, r@M> * r::node<b@M, r2@M> * r2::ll<n, @M> |- x::ll<n + 2, @M>.
print residue.
/*
Entail  : Valid.
 <1>EXISTS(flted_45_357,flted_45_356: x::node<a@M,r@A>@M[Orig] * r::node<b@M,r2@A>@M[Orig]&0<=0 & flted_45_357=@M & flted_45_356=@M & a_361=a & q_362=r & a_373=b & q_374=r2 & 0<=flted_45_356 & @M<:flted_45_356 & @M<:flted_45_356 & 0<=flted_45_356 & 0<=flted_45_356 & @M<:flted_45_356 & 0<=flted_45_356 & @M<:flted_45_356&{FLOW,(17,18)=__norm})[]
*/

// (12) Valid
checkentail x::node<a@M, r@M> * r::node<b@M, r2@M> * r2::ll<n, v2> |- x::ll<n + 2, v2>.
print residue.

// (13) Valid
checkentail x::node<_, r> * r::node<_, r2> * r2::ll<n,ann1> |- x::ll<n + 2,ann2>.
print residue.
/* fails because ann2 is instantiated during the match (x,x) and it 
cannot later prove ann1<:ann2, condition added during matching the tail r2*/


// (14) Fail
checkentail x::ll<n,@L> |- x::ll<n,@M> .
print residue.

