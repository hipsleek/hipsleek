data node{int val; node next;}. 

pred ls<p> == self=p or
     self::node<_, q> * q::ls<p>
   inv true.

//1
checkentail x::ls<p> |- x::ls<p>@A.
print residue.
expect Valid.

//2
checkentail x::ls<p> |- x::ls<p>.
print residue.
expect Valid.

//3
checkentail x::ls<p> * x::ls<p>@A |- x::ls<p>.
print residue.
expect Valid.

//4
checkentail x::ls<p> * x::ls<q>@A |- x::ls<q>.
print residue.
expect Fail.

//5
checkentail x::ls<p> * x::ls<q>@A |- p=q.
print residue.
expect Fail.

/*

Succeeds, but it should fail:

Entail 4: Valid.

Residue:
 <1>emp&p=q&{FLOW,(4,5)=__norm}[]
[[ COND ==>  Match(x,x) ==> ]]



*/