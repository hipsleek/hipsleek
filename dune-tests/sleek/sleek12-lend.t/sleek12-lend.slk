data node {
  node f0;
}.

pred pair<z:node> == self::node<z> * z::node<_>@L.

pred foo<y:node> ==
  self::node<y> * y::pair<_>@L.

checkentail_exact x::node<a>*a::node<b>*b::node<_>  |- x::foo<a>*a::pair<b>*b::node<_>.
expect Valid.
print residue.


checkentail_exact x::node<a>*a::node<b>*b::node<_>  |- x::foo<a>*a::pair<b>.
expect Fail.
print residue.

checkentail x::node<a>*a::node<b>*b::node<_>  |- x::foo<a>.
expect Valid.
/**
print residue.
 <1>a::node<b> * b::node<Anon_16>&Anon_143=Anon_16 & b=Anon_135&{FLOW,(21,22)=__norm}[]
[[ SEARCH ==>  Fold ==>  COND ==>  SEARCH ==>  Match ==>  SEARCH ==>  Fold ==>  SEARCH ==>  Match ==>  SEARCH ==>  Match ==> ]]

*/