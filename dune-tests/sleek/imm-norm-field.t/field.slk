data node {
  int val;
  node next;
}.

pred ll<n> == self=null & n=0
  or self::node<_,q>*q::ll<n-1>
  inv n>=0.

//checkentail x=null & x.val=2 |- false.
//(1)
checkentail x::node<2,_> & x=null |- false.
print residue.
expect Valid.

//checkentail x=null & (x:node).val=2 |- false.
//(2)
checkentail x::node<v,n>@A & x=null & v=2 |- false.
print residue.
expect Valid.

//checkentail x::node<2,q>*q::node<3,_> & x.next=null |- false.
//(3)
checkentail x::node<2,q>*q::node<3,_> & q=null |- false.
print residue.
expect Valid.

//checkentail x::node<2,q>*q::node<3,_>  |- x.val>1.
//(4)
checkentail x::node<2,q>*q::node<3,_>  |- x::node<v,_> & v>1.
print residue.
expect Valid.


//checkentail x::ll<n> & x.val=2  |- x::node<2,_>.
//(5)
checkentail x::node<a,q>*q::ll<n-1> & a=2  |- x::node<2,_>.
print residue.
expect Valid.

//checkentail x::ll<n> & x.next!=null  |- n>1.
//(6)
checkentail x::node<_,q>*q::ll<n-1> & q!=null  |- n>1.
print residue.
expect Valid.

//checkentail x::ll<n> & x.val!=3  |- n>0.
//(7)
checkentail x::node<v,q>*q::ll<n-1> & v!=3  |- n>0.
print residue.
expect Valid.

//checkentail x::ll<n> & n>3  |- x.next!=null.
//(8)
checkentail x::ll<n> & n>3  |- x::node<_,q>@L & q!=null.
print residue.

checkentail x::ll<n> & n>0  |- x::node<_,q>@L & q!=null.
//(9)
print residue.
expect Fail.

//checkentail x::ll<n> & n>0  |- x.next!=null.
checkentail x::ll<n> & n>0  |- x::node<_,q>@A & q!=null.
//(10)
print residue.
expect Fail.

//checkentail x::ll<n> & n>0  |- x.next!=null.
checkentail x::ll<n> & n>1  |- x::node<_,q>@A & q!=null.
//(11)
print residue.
expect Valid.


//checkentail x.val=5  |- x!=null.
//(12)
checkentail x::node<v,_>@A & v=5  |- x!=null.
print residue.
expect Valid.

/*
# field.slk

checkentail x::node<2,_> & x=null |- false.
print residue.

class Exp extends __Exc {
  int val;
}.

File "sexc2.slk", line 1, characters 0-5
 error: Stream.Error("illegal begin of sprog")
 at:(Program not linked with -g, cannot print stack backtrace)
SLEEK FAILURE (END)

exception processing is not supported by sleek!
can we add it ..
*/